/* soapH.h
   Generated by gSOAP 2.8.4 from OLSWS.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef SOAP_TYPE_ns3__DataHolder
#define SOAP_TYPE_ns3__DataHolder (54)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__DataHolder(struct soap*, const char*, int, const ns3__DataHolder *, const char*);
SOAP_FMAC3 ns3__DataHolder * SOAP_FMAC4 soap_in_ns3__DataHolder(struct soap*, const char*, ns3__DataHolder *, const char*);

#ifndef soap_write_ns3__DataHolder
#define soap_write_ns3__DataHolder(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns3:DataHolder", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns3__DataHolder
#define soap_read_ns3__DataHolder(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__DataHolder(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns3__DataHolder * SOAP_FMAC4 soap_get_ns3__DataHolder(struct soap*, ns3__DataHolder *, const char*, const char*);

#define soap_new_ns3__DataHolder(soap, n) soap_instantiate_ns3__DataHolder(soap, n, NULL, NULL, NULL)


#define soap_delete_ns3__DataHolder(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns3__DataHolder * SOAP_FMAC2 soap_instantiate_ns3__DataHolder(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__DataHolder(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__Vector
#define SOAP_TYPE_ns2__Vector (53)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Vector(struct soap*, const char*, int, const ns2__Vector *, const char*);
SOAP_FMAC3 ns2__Vector * SOAP_FMAC4 soap_in_ns2__Vector(struct soap*, const char*, ns2__Vector *, const char*);

#ifndef soap_write_ns2__Vector
#define soap_write_ns2__Vector(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:Vector", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns2__Vector
#define soap_read_ns2__Vector(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Vector(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns2__Vector * SOAP_FMAC4 soap_get_ns2__Vector(struct soap*, ns2__Vector *, const char*, const char*);

#define soap_new_ns2__Vector(soap, n) soap_instantiate_ns2__Vector(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__Vector(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns2__Vector * SOAP_FMAC2 soap_instantiate_ns2__Vector(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__Vector(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__Map
#define SOAP_TYPE_ns2__Map (52)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Map(struct soap*, const char*, int, const ns2__Map *, const char*);
SOAP_FMAC3 ns2__Map * SOAP_FMAC4 soap_in_ns2__Map(struct soap*, const char*, ns2__Map *, const char*);

#ifndef soap_write_ns2__Map
#define soap_write_ns2__Map(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:Map", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns2__Map
#define soap_read_ns2__Map(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Map(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns2__Map * SOAP_FMAC4 soap_get_ns2__Map(struct soap*, ns2__Map *, const char*, const char*);

#define soap_new_ns2__Map(soap, n) soap_instantiate_ns2__Map(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__Map(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns2__Map * SOAP_FMAC2 soap_instantiate_ns2__Map(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__Map(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__mapItem
#define SOAP_TYPE_ns2__mapItem (51)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__mapItem(struct soap*, const char*, int, const ns2__mapItem *, const char*);
SOAP_FMAC3 ns2__mapItem * SOAP_FMAC4 soap_in_ns2__mapItem(struct soap*, const char*, ns2__mapItem *, const char*);

#ifndef soap_write_ns2__mapItem
#define soap_write_ns2__mapItem(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:mapItem", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns2__mapItem
#define soap_read_ns2__mapItem(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__mapItem(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns2__mapItem * SOAP_FMAC4 soap_get_ns2__mapItem(struct soap*, ns2__mapItem *, const char*, const char*);

#define soap_new_ns2__mapItem(soap, n) soap_instantiate_ns2__mapItem(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__mapItem(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns2__mapItem * SOAP_FMAC2 soap_instantiate_ns2__mapItem(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__mapItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermsByAnnotationDataResponse
#define SOAP_TYPE__ns1__getTermsByAnnotationDataResponse (50)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermsByAnnotationDataResponse(struct soap*, const char*, int, const _ns1__getTermsByAnnotationDataResponse *, const char*);
SOAP_FMAC3 _ns1__getTermsByAnnotationDataResponse * SOAP_FMAC4 soap_in__ns1__getTermsByAnnotationDataResponse(struct soap*, const char*, _ns1__getTermsByAnnotationDataResponse *, const char*);

#ifndef soap_write__ns1__getTermsByAnnotationDataResponse
#define soap_write__ns1__getTermsByAnnotationDataResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermsByAnnotationDataResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermsByAnnotationDataResponse
#define soap_read__ns1__getTermsByAnnotationDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermsByAnnotationDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByAnnotationDataResponse * SOAP_FMAC4 soap_get__ns1__getTermsByAnnotationDataResponse(struct soap*, _ns1__getTermsByAnnotationDataResponse *, const char*, const char*);

#define soap_new__ns1__getTermsByAnnotationDataResponse(soap, n) soap_instantiate__ns1__getTermsByAnnotationDataResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermsByAnnotationDataResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermsByAnnotationDataResponse * SOAP_FMAC2 soap_instantiate__ns1__getTermsByAnnotationDataResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermsByAnnotationDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermsByAnnotationData
#define SOAP_TYPE__ns1__getTermsByAnnotationData (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermsByAnnotationData(struct soap*, const char*, int, const _ns1__getTermsByAnnotationData *, const char*);
SOAP_FMAC3 _ns1__getTermsByAnnotationData * SOAP_FMAC4 soap_in__ns1__getTermsByAnnotationData(struct soap*, const char*, _ns1__getTermsByAnnotationData *, const char*);

#ifndef soap_write__ns1__getTermsByAnnotationData
#define soap_write__ns1__getTermsByAnnotationData(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermsByAnnotationData", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermsByAnnotationData
#define soap_read__ns1__getTermsByAnnotationData(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermsByAnnotationData(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByAnnotationData * SOAP_FMAC4 soap_get__ns1__getTermsByAnnotationData(struct soap*, _ns1__getTermsByAnnotationData *, const char*, const char*);

#define soap_new__ns1__getTermsByAnnotationData(soap, n) soap_instantiate__ns1__getTermsByAnnotationData(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermsByAnnotationData(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermsByAnnotationData * SOAP_FMAC2 soap_instantiate__ns1__getTermsByAnnotationData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermsByAnnotationData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__isObsoleteResponse
#define SOAP_TYPE__ns1__isObsoleteResponse (48)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__isObsoleteResponse(struct soap*, const char*, int, const _ns1__isObsoleteResponse *, const char*);
SOAP_FMAC3 _ns1__isObsoleteResponse * SOAP_FMAC4 soap_in__ns1__isObsoleteResponse(struct soap*, const char*, _ns1__isObsoleteResponse *, const char*);

#ifndef soap_write__ns1__isObsoleteResponse
#define soap_write__ns1__isObsoleteResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:isObsoleteResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__isObsoleteResponse
#define soap_read__ns1__isObsoleteResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__isObsoleteResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__isObsoleteResponse * SOAP_FMAC4 soap_get__ns1__isObsoleteResponse(struct soap*, _ns1__isObsoleteResponse *, const char*, const char*);

#define soap_new__ns1__isObsoleteResponse(soap, n) soap_instantiate__ns1__isObsoleteResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__isObsoleteResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__isObsoleteResponse * SOAP_FMAC2 soap_instantiate__ns1__isObsoleteResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__isObsoleteResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__isObsolete
#define SOAP_TYPE__ns1__isObsolete (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__isObsolete(struct soap*, const char*, int, const _ns1__isObsolete *, const char*);
SOAP_FMAC3 _ns1__isObsolete * SOAP_FMAC4 soap_in__ns1__isObsolete(struct soap*, const char*, _ns1__isObsolete *, const char*);

#ifndef soap_write__ns1__isObsolete
#define soap_write__ns1__isObsolete(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:isObsolete", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__isObsolete
#define soap_read__ns1__isObsolete(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__isObsolete(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__isObsolete * SOAP_FMAC4 soap_get__ns1__isObsolete(struct soap*, _ns1__isObsolete *, const char*, const char*);

#define soap_new__ns1__isObsolete(soap, n) soap_instantiate__ns1__isObsolete(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__isObsolete(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__isObsolete * SOAP_FMAC2 soap_instantiate__ns1__isObsolete(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__isObsolete(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getChildrenFromRootResponse
#define SOAP_TYPE__ns1__getChildrenFromRootResponse (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getChildrenFromRootResponse(struct soap*, const char*, int, const _ns1__getChildrenFromRootResponse *, const char*);
SOAP_FMAC3 _ns1__getChildrenFromRootResponse * SOAP_FMAC4 soap_in__ns1__getChildrenFromRootResponse(struct soap*, const char*, _ns1__getChildrenFromRootResponse *, const char*);

#ifndef soap_write__ns1__getChildrenFromRootResponse
#define soap_write__ns1__getChildrenFromRootResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getChildrenFromRootResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getChildrenFromRootResponse
#define soap_read__ns1__getChildrenFromRootResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getChildrenFromRootResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getChildrenFromRootResponse * SOAP_FMAC4 soap_get__ns1__getChildrenFromRootResponse(struct soap*, _ns1__getChildrenFromRootResponse *, const char*, const char*);

#define soap_new__ns1__getChildrenFromRootResponse(soap, n) soap_instantiate__ns1__getChildrenFromRootResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getChildrenFromRootResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getChildrenFromRootResponse * SOAP_FMAC2 soap_instantiate__ns1__getChildrenFromRootResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getChildrenFromRootResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getChildrenFromRoot
#define SOAP_TYPE__ns1__getChildrenFromRoot (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getChildrenFromRoot(struct soap*, const char*, int, const _ns1__getChildrenFromRoot *, const char*);
SOAP_FMAC3 _ns1__getChildrenFromRoot * SOAP_FMAC4 soap_in__ns1__getChildrenFromRoot(struct soap*, const char*, _ns1__getChildrenFromRoot *, const char*);

#ifndef soap_write__ns1__getChildrenFromRoot
#define soap_write__ns1__getChildrenFromRoot(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getChildrenFromRoot", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getChildrenFromRoot
#define soap_read__ns1__getChildrenFromRoot(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getChildrenFromRoot(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getChildrenFromRoot * SOAP_FMAC4 soap_get__ns1__getChildrenFromRoot(struct soap*, _ns1__getChildrenFromRoot *, const char*, const char*);

#define soap_new__ns1__getChildrenFromRoot(soap, n) soap_instantiate__ns1__getChildrenFromRoot(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getChildrenFromRoot(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getChildrenFromRoot * SOAP_FMAC2 soap_instantiate__ns1__getChildrenFromRoot(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getChildrenFromRoot(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermRelationsResponse
#define SOAP_TYPE__ns1__getTermRelationsResponse (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermRelationsResponse(struct soap*, const char*, int, const _ns1__getTermRelationsResponse *, const char*);
SOAP_FMAC3 _ns1__getTermRelationsResponse * SOAP_FMAC4 soap_in__ns1__getTermRelationsResponse(struct soap*, const char*, _ns1__getTermRelationsResponse *, const char*);

#ifndef soap_write__ns1__getTermRelationsResponse
#define soap_write__ns1__getTermRelationsResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermRelationsResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermRelationsResponse
#define soap_read__ns1__getTermRelationsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermRelationsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermRelationsResponse * SOAP_FMAC4 soap_get__ns1__getTermRelationsResponse(struct soap*, _ns1__getTermRelationsResponse *, const char*, const char*);

#define soap_new__ns1__getTermRelationsResponse(soap, n) soap_instantiate__ns1__getTermRelationsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermRelationsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermRelationsResponse * SOAP_FMAC2 soap_instantiate__ns1__getTermRelationsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermRelationsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermRelations
#define SOAP_TYPE__ns1__getTermRelations (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermRelations(struct soap*, const char*, int, const _ns1__getTermRelations *, const char*);
SOAP_FMAC3 _ns1__getTermRelations * SOAP_FMAC4 soap_in__ns1__getTermRelations(struct soap*, const char*, _ns1__getTermRelations *, const char*);

#ifndef soap_write__ns1__getTermRelations
#define soap_write__ns1__getTermRelations(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermRelations", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermRelations
#define soap_read__ns1__getTermRelations(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermRelations(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermRelations * SOAP_FMAC4 soap_get__ns1__getTermRelations(struct soap*, _ns1__getTermRelations *, const char*, const char*);

#define soap_new__ns1__getTermRelations(soap, n) soap_instantiate__ns1__getTermRelations(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermRelations(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermRelations * SOAP_FMAC2 soap_instantiate__ns1__getTermRelations(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermRelations(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermChildrenResponse
#define SOAP_TYPE__ns1__getTermChildrenResponse (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermChildrenResponse(struct soap*, const char*, int, const _ns1__getTermChildrenResponse *, const char*);
SOAP_FMAC3 _ns1__getTermChildrenResponse * SOAP_FMAC4 soap_in__ns1__getTermChildrenResponse(struct soap*, const char*, _ns1__getTermChildrenResponse *, const char*);

#ifndef soap_write__ns1__getTermChildrenResponse
#define soap_write__ns1__getTermChildrenResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermChildrenResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermChildrenResponse
#define soap_read__ns1__getTermChildrenResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermChildrenResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermChildrenResponse * SOAP_FMAC4 soap_get__ns1__getTermChildrenResponse(struct soap*, _ns1__getTermChildrenResponse *, const char*, const char*);

#define soap_new__ns1__getTermChildrenResponse(soap, n) soap_instantiate__ns1__getTermChildrenResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermChildrenResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermChildrenResponse * SOAP_FMAC2 soap_instantiate__ns1__getTermChildrenResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermChildrenResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermChildren
#define SOAP_TYPE__ns1__getTermChildren (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermChildren(struct soap*, const char*, int, const _ns1__getTermChildren *, const char*);
SOAP_FMAC3 _ns1__getTermChildren * SOAP_FMAC4 soap_in__ns1__getTermChildren(struct soap*, const char*, _ns1__getTermChildren *, const char*);

#ifndef soap_write__ns1__getTermChildren
#define soap_write__ns1__getTermChildren(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermChildren", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermChildren
#define soap_read__ns1__getTermChildren(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermChildren(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermChildren * SOAP_FMAC4 soap_get__ns1__getTermChildren(struct soap*, _ns1__getTermChildren *, const char*, const char*);

#define soap_new__ns1__getTermChildren(soap, n) soap_instantiate__ns1__getTermChildren(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermChildren(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermChildren * SOAP_FMAC2 soap_instantiate__ns1__getTermChildren(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermChildren(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermParentsResponse
#define SOAP_TYPE__ns1__getTermParentsResponse (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermParentsResponse(struct soap*, const char*, int, const _ns1__getTermParentsResponse *, const char*);
SOAP_FMAC3 _ns1__getTermParentsResponse * SOAP_FMAC4 soap_in__ns1__getTermParentsResponse(struct soap*, const char*, _ns1__getTermParentsResponse *, const char*);

#ifndef soap_write__ns1__getTermParentsResponse
#define soap_write__ns1__getTermParentsResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermParentsResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermParentsResponse
#define soap_read__ns1__getTermParentsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermParentsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermParentsResponse * SOAP_FMAC4 soap_get__ns1__getTermParentsResponse(struct soap*, _ns1__getTermParentsResponse *, const char*, const char*);

#define soap_new__ns1__getTermParentsResponse(soap, n) soap_instantiate__ns1__getTermParentsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermParentsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermParentsResponse * SOAP_FMAC2 soap_instantiate__ns1__getTermParentsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermParentsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermParents
#define SOAP_TYPE__ns1__getTermParents (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermParents(struct soap*, const char*, int, const _ns1__getTermParents *, const char*);
SOAP_FMAC3 _ns1__getTermParents * SOAP_FMAC4 soap_in__ns1__getTermParents(struct soap*, const char*, _ns1__getTermParents *, const char*);

#ifndef soap_write__ns1__getTermParents
#define soap_write__ns1__getTermParents(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermParents", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermParents
#define soap_read__ns1__getTermParents(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermParents(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermParents * SOAP_FMAC4 soap_get__ns1__getTermParents(struct soap*, _ns1__getTermParents *, const char*, const char*);

#define soap_new__ns1__getTermParents(soap, n) soap_instantiate__ns1__getTermParents(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermParents(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermParents * SOAP_FMAC2 soap_instantiate__ns1__getTermParents(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermParents(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getPrefixedTermsByNameResponse
#define SOAP_TYPE__ns1__getPrefixedTermsByNameResponse (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getPrefixedTermsByNameResponse(struct soap*, const char*, int, const _ns1__getPrefixedTermsByNameResponse *, const char*);
SOAP_FMAC3 _ns1__getPrefixedTermsByNameResponse * SOAP_FMAC4 soap_in__ns1__getPrefixedTermsByNameResponse(struct soap*, const char*, _ns1__getPrefixedTermsByNameResponse *, const char*);

#ifndef soap_write__ns1__getPrefixedTermsByNameResponse
#define soap_write__ns1__getPrefixedTermsByNameResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getPrefixedTermsByNameResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getPrefixedTermsByNameResponse
#define soap_read__ns1__getPrefixedTermsByNameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getPrefixedTermsByNameResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getPrefixedTermsByNameResponse * SOAP_FMAC4 soap_get__ns1__getPrefixedTermsByNameResponse(struct soap*, _ns1__getPrefixedTermsByNameResponse *, const char*, const char*);

#define soap_new__ns1__getPrefixedTermsByNameResponse(soap, n) soap_instantiate__ns1__getPrefixedTermsByNameResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getPrefixedTermsByNameResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getPrefixedTermsByNameResponse * SOAP_FMAC2 soap_instantiate__ns1__getPrefixedTermsByNameResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getPrefixedTermsByNameResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getPrefixedTermsByName
#define SOAP_TYPE__ns1__getPrefixedTermsByName (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getPrefixedTermsByName(struct soap*, const char*, int, const _ns1__getPrefixedTermsByName *, const char*);
SOAP_FMAC3 _ns1__getPrefixedTermsByName * SOAP_FMAC4 soap_in__ns1__getPrefixedTermsByName(struct soap*, const char*, _ns1__getPrefixedTermsByName *, const char*);

#ifndef soap_write__ns1__getPrefixedTermsByName
#define soap_write__ns1__getPrefixedTermsByName(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getPrefixedTermsByName", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getPrefixedTermsByName
#define soap_read__ns1__getPrefixedTermsByName(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getPrefixedTermsByName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getPrefixedTermsByName * SOAP_FMAC4 soap_get__ns1__getPrefixedTermsByName(struct soap*, _ns1__getPrefixedTermsByName *, const char*, const char*);

#define soap_new__ns1__getPrefixedTermsByName(soap, n) soap_instantiate__ns1__getPrefixedTermsByName(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getPrefixedTermsByName(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getPrefixedTermsByName * SOAP_FMAC2 soap_instantiate__ns1__getPrefixedTermsByName(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getPrefixedTermsByName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermsByExactNameResponse
#define SOAP_TYPE__ns1__getTermsByExactNameResponse (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermsByExactNameResponse(struct soap*, const char*, int, const _ns1__getTermsByExactNameResponse *, const char*);
SOAP_FMAC3 _ns1__getTermsByExactNameResponse * SOAP_FMAC4 soap_in__ns1__getTermsByExactNameResponse(struct soap*, const char*, _ns1__getTermsByExactNameResponse *, const char*);

#ifndef soap_write__ns1__getTermsByExactNameResponse
#define soap_write__ns1__getTermsByExactNameResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermsByExactNameResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermsByExactNameResponse
#define soap_read__ns1__getTermsByExactNameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermsByExactNameResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByExactNameResponse * SOAP_FMAC4 soap_get__ns1__getTermsByExactNameResponse(struct soap*, _ns1__getTermsByExactNameResponse *, const char*, const char*);

#define soap_new__ns1__getTermsByExactNameResponse(soap, n) soap_instantiate__ns1__getTermsByExactNameResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermsByExactNameResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermsByExactNameResponse * SOAP_FMAC2 soap_instantiate__ns1__getTermsByExactNameResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermsByExactNameResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermsByExactName
#define SOAP_TYPE__ns1__getTermsByExactName (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermsByExactName(struct soap*, const char*, int, const _ns1__getTermsByExactName *, const char*);
SOAP_FMAC3 _ns1__getTermsByExactName * SOAP_FMAC4 soap_in__ns1__getTermsByExactName(struct soap*, const char*, _ns1__getTermsByExactName *, const char*);

#ifndef soap_write__ns1__getTermsByExactName
#define soap_write__ns1__getTermsByExactName(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermsByExactName", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermsByExactName
#define soap_read__ns1__getTermsByExactName(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermsByExactName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByExactName * SOAP_FMAC4 soap_get__ns1__getTermsByExactName(struct soap*, _ns1__getTermsByExactName *, const char*, const char*);

#define soap_new__ns1__getTermsByExactName(soap, n) soap_instantiate__ns1__getTermsByExactName(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermsByExactName(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermsByExactName * SOAP_FMAC2 soap_instantiate__ns1__getTermsByExactName(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermsByExactName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermsByNameResponse
#define SOAP_TYPE__ns1__getTermsByNameResponse (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermsByNameResponse(struct soap*, const char*, int, const _ns1__getTermsByNameResponse *, const char*);
SOAP_FMAC3 _ns1__getTermsByNameResponse * SOAP_FMAC4 soap_in__ns1__getTermsByNameResponse(struct soap*, const char*, _ns1__getTermsByNameResponse *, const char*);

#ifndef soap_write__ns1__getTermsByNameResponse
#define soap_write__ns1__getTermsByNameResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermsByNameResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermsByNameResponse
#define soap_read__ns1__getTermsByNameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermsByNameResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByNameResponse * SOAP_FMAC4 soap_get__ns1__getTermsByNameResponse(struct soap*, _ns1__getTermsByNameResponse *, const char*, const char*);

#define soap_new__ns1__getTermsByNameResponse(soap, n) soap_instantiate__ns1__getTermsByNameResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermsByNameResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermsByNameResponse * SOAP_FMAC2 soap_instantiate__ns1__getTermsByNameResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermsByNameResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermsByName
#define SOAP_TYPE__ns1__getTermsByName (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermsByName(struct soap*, const char*, int, const _ns1__getTermsByName *, const char*);
SOAP_FMAC3 _ns1__getTermsByName * SOAP_FMAC4 soap_in__ns1__getTermsByName(struct soap*, const char*, _ns1__getTermsByName *, const char*);

#ifndef soap_write__ns1__getTermsByName
#define soap_write__ns1__getTermsByName(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermsByName", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermsByName
#define soap_read__ns1__getTermsByName(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermsByName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByName * SOAP_FMAC4 soap_get__ns1__getTermsByName(struct soap*, _ns1__getTermsByName *, const char*, const char*);

#define soap_new__ns1__getTermsByName(soap, n) soap_instantiate__ns1__getTermsByName(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermsByName(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermsByName * SOAP_FMAC2 soap_instantiate__ns1__getTermsByName(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermsByName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getRootTermsResponse
#define SOAP_TYPE__ns1__getRootTermsResponse (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getRootTermsResponse(struct soap*, const char*, int, const _ns1__getRootTermsResponse *, const char*);
SOAP_FMAC3 _ns1__getRootTermsResponse * SOAP_FMAC4 soap_in__ns1__getRootTermsResponse(struct soap*, const char*, _ns1__getRootTermsResponse *, const char*);

#ifndef soap_write__ns1__getRootTermsResponse
#define soap_write__ns1__getRootTermsResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getRootTermsResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getRootTermsResponse
#define soap_read__ns1__getRootTermsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getRootTermsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getRootTermsResponse * SOAP_FMAC4 soap_get__ns1__getRootTermsResponse(struct soap*, _ns1__getRootTermsResponse *, const char*, const char*);

#define soap_new__ns1__getRootTermsResponse(soap, n) soap_instantiate__ns1__getRootTermsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getRootTermsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getRootTermsResponse * SOAP_FMAC2 soap_instantiate__ns1__getRootTermsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getRootTermsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getRootTerms
#define SOAP_TYPE__ns1__getRootTerms (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getRootTerms(struct soap*, const char*, int, const _ns1__getRootTerms *, const char*);
SOAP_FMAC3 _ns1__getRootTerms * SOAP_FMAC4 soap_in__ns1__getRootTerms(struct soap*, const char*, _ns1__getRootTerms *, const char*);

#ifndef soap_write__ns1__getRootTerms
#define soap_write__ns1__getRootTerms(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getRootTerms", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getRootTerms
#define soap_read__ns1__getRootTerms(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getRootTerms(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getRootTerms * SOAP_FMAC4 soap_get__ns1__getRootTerms(struct soap*, _ns1__getRootTerms *, const char*, const char*);

#define soap_new__ns1__getRootTerms(soap, n) soap_instantiate__ns1__getRootTerms(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getRootTerms(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getRootTerms * SOAP_FMAC2 soap_instantiate__ns1__getRootTerms(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getRootTerms(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getAllTermsFromOntologyResponse
#define SOAP_TYPE__ns1__getAllTermsFromOntologyResponse (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getAllTermsFromOntologyResponse(struct soap*, const char*, int, const _ns1__getAllTermsFromOntologyResponse *, const char*);
SOAP_FMAC3 _ns1__getAllTermsFromOntologyResponse * SOAP_FMAC4 soap_in__ns1__getAllTermsFromOntologyResponse(struct soap*, const char*, _ns1__getAllTermsFromOntologyResponse *, const char*);

#ifndef soap_write__ns1__getAllTermsFromOntologyResponse
#define soap_write__ns1__getAllTermsFromOntologyResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getAllTermsFromOntologyResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getAllTermsFromOntologyResponse
#define soap_read__ns1__getAllTermsFromOntologyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getAllTermsFromOntologyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getAllTermsFromOntologyResponse * SOAP_FMAC4 soap_get__ns1__getAllTermsFromOntologyResponse(struct soap*, _ns1__getAllTermsFromOntologyResponse *, const char*, const char*);

#define soap_new__ns1__getAllTermsFromOntologyResponse(soap, n) soap_instantiate__ns1__getAllTermsFromOntologyResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getAllTermsFromOntologyResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getAllTermsFromOntologyResponse * SOAP_FMAC2 soap_instantiate__ns1__getAllTermsFromOntologyResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getAllTermsFromOntologyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getAllTermsFromOntology
#define SOAP_TYPE__ns1__getAllTermsFromOntology (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getAllTermsFromOntology(struct soap*, const char*, int, const _ns1__getAllTermsFromOntology *, const char*);
SOAP_FMAC3 _ns1__getAllTermsFromOntology * SOAP_FMAC4 soap_in__ns1__getAllTermsFromOntology(struct soap*, const char*, _ns1__getAllTermsFromOntology *, const char*);

#ifndef soap_write__ns1__getAllTermsFromOntology
#define soap_write__ns1__getAllTermsFromOntology(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getAllTermsFromOntology", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getAllTermsFromOntology
#define soap_read__ns1__getAllTermsFromOntology(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getAllTermsFromOntology(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getAllTermsFromOntology * SOAP_FMAC4 soap_get__ns1__getAllTermsFromOntology(struct soap*, _ns1__getAllTermsFromOntology *, const char*, const char*);

#define soap_new__ns1__getAllTermsFromOntology(soap, n) soap_instantiate__ns1__getAllTermsFromOntology(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getAllTermsFromOntology(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getAllTermsFromOntology * SOAP_FMAC2 soap_instantiate__ns1__getAllTermsFromOntology(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getAllTermsFromOntology(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getOntologyLoadDateResponse
#define SOAP_TYPE__ns1__getOntologyLoadDateResponse (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getOntologyLoadDateResponse(struct soap*, const char*, int, const _ns1__getOntologyLoadDateResponse *, const char*);
SOAP_FMAC3 _ns1__getOntologyLoadDateResponse * SOAP_FMAC4 soap_in__ns1__getOntologyLoadDateResponse(struct soap*, const char*, _ns1__getOntologyLoadDateResponse *, const char*);

#ifndef soap_write__ns1__getOntologyLoadDateResponse
#define soap_write__ns1__getOntologyLoadDateResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getOntologyLoadDateResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getOntologyLoadDateResponse
#define soap_read__ns1__getOntologyLoadDateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getOntologyLoadDateResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getOntologyLoadDateResponse * SOAP_FMAC4 soap_get__ns1__getOntologyLoadDateResponse(struct soap*, _ns1__getOntologyLoadDateResponse *, const char*, const char*);

#define soap_new__ns1__getOntologyLoadDateResponse(soap, n) soap_instantiate__ns1__getOntologyLoadDateResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getOntologyLoadDateResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getOntologyLoadDateResponse * SOAP_FMAC2 soap_instantiate__ns1__getOntologyLoadDateResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getOntologyLoadDateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getOntologyLoadDate
#define SOAP_TYPE__ns1__getOntologyLoadDate (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getOntologyLoadDate(struct soap*, const char*, int, const _ns1__getOntologyLoadDate *, const char*);
SOAP_FMAC3 _ns1__getOntologyLoadDate * SOAP_FMAC4 soap_in__ns1__getOntologyLoadDate(struct soap*, const char*, _ns1__getOntologyLoadDate *, const char*);

#ifndef soap_write__ns1__getOntologyLoadDate
#define soap_write__ns1__getOntologyLoadDate(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getOntologyLoadDate", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getOntologyLoadDate
#define soap_read__ns1__getOntologyLoadDate(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getOntologyLoadDate(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getOntologyLoadDate * SOAP_FMAC4 soap_get__ns1__getOntologyLoadDate(struct soap*, _ns1__getOntologyLoadDate *, const char*, const char*);

#define soap_new__ns1__getOntologyLoadDate(soap, n) soap_instantiate__ns1__getOntologyLoadDate(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getOntologyLoadDate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getOntologyLoadDate * SOAP_FMAC2 soap_instantiate__ns1__getOntologyLoadDate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getOntologyLoadDate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getOntologyNamesResponse
#define SOAP_TYPE__ns1__getOntologyNamesResponse (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getOntologyNamesResponse(struct soap*, const char*, int, const _ns1__getOntologyNamesResponse *, const char*);
SOAP_FMAC3 _ns1__getOntologyNamesResponse * SOAP_FMAC4 soap_in__ns1__getOntologyNamesResponse(struct soap*, const char*, _ns1__getOntologyNamesResponse *, const char*);

#ifndef soap_write__ns1__getOntologyNamesResponse
#define soap_write__ns1__getOntologyNamesResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getOntologyNamesResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getOntologyNamesResponse
#define soap_read__ns1__getOntologyNamesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getOntologyNamesResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getOntologyNamesResponse * SOAP_FMAC4 soap_get__ns1__getOntologyNamesResponse(struct soap*, _ns1__getOntologyNamesResponse *, const char*, const char*);

#define soap_new__ns1__getOntologyNamesResponse(soap, n) soap_instantiate__ns1__getOntologyNamesResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getOntologyNamesResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getOntologyNamesResponse * SOAP_FMAC2 soap_instantiate__ns1__getOntologyNamesResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getOntologyNamesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getOntologyNames
#define SOAP_TYPE__ns1__getOntologyNames (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getOntologyNames(struct soap*, const char*, int, const _ns1__getOntologyNames *, const char*);
SOAP_FMAC3 _ns1__getOntologyNames * SOAP_FMAC4 soap_in__ns1__getOntologyNames(struct soap*, const char*, _ns1__getOntologyNames *, const char*);

#ifndef soap_write__ns1__getOntologyNames
#define soap_write__ns1__getOntologyNames(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getOntologyNames", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getOntologyNames
#define soap_read__ns1__getOntologyNames(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getOntologyNames(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getOntologyNames * SOAP_FMAC4 soap_get__ns1__getOntologyNames(struct soap*, _ns1__getOntologyNames *, const char*, const char*);

#define soap_new__ns1__getOntologyNames(soap, n) soap_instantiate__ns1__getOntologyNames(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getOntologyNames(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getOntologyNames * SOAP_FMAC2 soap_instantiate__ns1__getOntologyNames(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getOntologyNames(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermXrefsResponse
#define SOAP_TYPE__ns1__getTermXrefsResponse (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermXrefsResponse(struct soap*, const char*, int, const _ns1__getTermXrefsResponse *, const char*);
SOAP_FMAC3 _ns1__getTermXrefsResponse * SOAP_FMAC4 soap_in__ns1__getTermXrefsResponse(struct soap*, const char*, _ns1__getTermXrefsResponse *, const char*);

#ifndef soap_write__ns1__getTermXrefsResponse
#define soap_write__ns1__getTermXrefsResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermXrefsResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermXrefsResponse
#define soap_read__ns1__getTermXrefsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermXrefsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermXrefsResponse * SOAP_FMAC4 soap_get__ns1__getTermXrefsResponse(struct soap*, _ns1__getTermXrefsResponse *, const char*, const char*);

#define soap_new__ns1__getTermXrefsResponse(soap, n) soap_instantiate__ns1__getTermXrefsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermXrefsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermXrefsResponse * SOAP_FMAC2 soap_instantiate__ns1__getTermXrefsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermXrefsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermXrefs
#define SOAP_TYPE__ns1__getTermXrefs (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermXrefs(struct soap*, const char*, int, const _ns1__getTermXrefs *, const char*);
SOAP_FMAC3 _ns1__getTermXrefs * SOAP_FMAC4 soap_in__ns1__getTermXrefs(struct soap*, const char*, _ns1__getTermXrefs *, const char*);

#ifndef soap_write__ns1__getTermXrefs
#define soap_write__ns1__getTermXrefs(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermXrefs", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermXrefs
#define soap_read__ns1__getTermXrefs(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermXrefs(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermXrefs * SOAP_FMAC4 soap_get__ns1__getTermXrefs(struct soap*, _ns1__getTermXrefs *, const char*, const char*);

#define soap_new__ns1__getTermXrefs(soap, n) soap_instantiate__ns1__getTermXrefs(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermXrefs(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermXrefs * SOAP_FMAC2 soap_instantiate__ns1__getTermXrefs(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermXrefs(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermMetadataResponse
#define SOAP_TYPE__ns1__getTermMetadataResponse (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermMetadataResponse(struct soap*, const char*, int, const _ns1__getTermMetadataResponse *, const char*);
SOAP_FMAC3 _ns1__getTermMetadataResponse * SOAP_FMAC4 soap_in__ns1__getTermMetadataResponse(struct soap*, const char*, _ns1__getTermMetadataResponse *, const char*);

#ifndef soap_write__ns1__getTermMetadataResponse
#define soap_write__ns1__getTermMetadataResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermMetadataResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermMetadataResponse
#define soap_read__ns1__getTermMetadataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermMetadataResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermMetadataResponse * SOAP_FMAC4 soap_get__ns1__getTermMetadataResponse(struct soap*, _ns1__getTermMetadataResponse *, const char*, const char*);

#define soap_new__ns1__getTermMetadataResponse(soap, n) soap_instantiate__ns1__getTermMetadataResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermMetadataResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermMetadataResponse * SOAP_FMAC2 soap_instantiate__ns1__getTermMetadataResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermMetadataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermMetadata
#define SOAP_TYPE__ns1__getTermMetadata (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermMetadata(struct soap*, const char*, int, const _ns1__getTermMetadata *, const char*);
SOAP_FMAC3 _ns1__getTermMetadata * SOAP_FMAC4 soap_in__ns1__getTermMetadata(struct soap*, const char*, _ns1__getTermMetadata *, const char*);

#ifndef soap_write__ns1__getTermMetadata
#define soap_write__ns1__getTermMetadata(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermMetadata", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermMetadata
#define soap_read__ns1__getTermMetadata(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermMetadata(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermMetadata * SOAP_FMAC4 soap_get__ns1__getTermMetadata(struct soap*, _ns1__getTermMetadata *, const char*, const char*);

#define soap_new__ns1__getTermMetadata(soap, n) soap_instantiate__ns1__getTermMetadata(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermMetadata(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermMetadata * SOAP_FMAC2 soap_instantiate__ns1__getTermMetadata(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermMetadata(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermByIdResponse
#define SOAP_TYPE__ns1__getTermByIdResponse (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermByIdResponse(struct soap*, const char*, int, const _ns1__getTermByIdResponse *, const char*);
SOAP_FMAC3 _ns1__getTermByIdResponse * SOAP_FMAC4 soap_in__ns1__getTermByIdResponse(struct soap*, const char*, _ns1__getTermByIdResponse *, const char*);

#ifndef soap_write__ns1__getTermByIdResponse
#define soap_write__ns1__getTermByIdResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermByIdResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermByIdResponse
#define soap_read__ns1__getTermByIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermByIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermByIdResponse * SOAP_FMAC4 soap_get__ns1__getTermByIdResponse(struct soap*, _ns1__getTermByIdResponse *, const char*, const char*);

#define soap_new__ns1__getTermByIdResponse(soap, n) soap_instantiate__ns1__getTermByIdResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermByIdResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermByIdResponse * SOAP_FMAC2 soap_instantiate__ns1__getTermByIdResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermByIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getTermById
#define SOAP_TYPE__ns1__getTermById (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getTermById(struct soap*, const char*, int, const _ns1__getTermById *, const char*);
SOAP_FMAC3 _ns1__getTermById * SOAP_FMAC4 soap_in__ns1__getTermById(struct soap*, const char*, _ns1__getTermById *, const char*);

#ifndef soap_write__ns1__getTermById
#define soap_write__ns1__getTermById(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getTermById", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getTermById
#define soap_read__ns1__getTermById(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getTermById(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermById * SOAP_FMAC4 soap_get__ns1__getTermById(struct soap*, _ns1__getTermById *, const char*, const char*);

#define soap_new__ns1__getTermById(soap, n) soap_instantiate__ns1__getTermById(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getTermById(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getTermById * SOAP_FMAC2 soap_instantiate__ns1__getTermById(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getTermById(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getVersionResponse
#define SOAP_TYPE__ns1__getVersionResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getVersionResponse(struct soap*, const char*, int, const _ns1__getVersionResponse *, const char*);
SOAP_FMAC3 _ns1__getVersionResponse * SOAP_FMAC4 soap_in__ns1__getVersionResponse(struct soap*, const char*, _ns1__getVersionResponse *, const char*);

#ifndef soap_write__ns1__getVersionResponse
#define soap_write__ns1__getVersionResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getVersionResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getVersionResponse
#define soap_read__ns1__getVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getVersionResponse * SOAP_FMAC4 soap_get__ns1__getVersionResponse(struct soap*, _ns1__getVersionResponse *, const char*, const char*);

#define soap_new__ns1__getVersionResponse(soap, n) soap_instantiate__ns1__getVersionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getVersionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getVersionResponse * SOAP_FMAC2 soap_instantiate__ns1__getVersionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getVersion
#define SOAP_TYPE__ns1__getVersion (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getVersion(struct soap*, const char*, int, const _ns1__getVersion *, const char*);
SOAP_FMAC3 _ns1__getVersion * SOAP_FMAC4 soap_in__ns1__getVersion(struct soap*, const char*, _ns1__getVersion *, const char*);

#ifndef soap_write__ns1__getVersion
#define soap_write__ns1__getVersion(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getVersion", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getVersion
#define soap_read__ns1__getVersion(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getVersion * SOAP_FMAC4 soap_get__ns1__getVersion(struct soap*, _ns1__getVersion *, const char*, const char*);

#define soap_new__ns1__getVersion(soap, n) soap_instantiate__ns1__getVersion(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getVersion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getVersion * SOAP_FMAC2 soap_instantiate__ns1__getVersion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, const xsd__string *, const char*);
SOAP_FMAC3 xsd__string * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, xsd__string *, const char*);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:string", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xsd__string * SOAP_FMAC4 soap_get_xsd__string(struct soap*, xsd__string *, const char*, const char*);

#define soap_new_xsd__string(soap, n) soap_instantiate_xsd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__string * SOAP_FMAC2 soap_instantiate_xsd__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__int(struct soap*, const char*, int, const xsd__int *, const char*);
SOAP_FMAC3 xsd__int * SOAP_FMAC4 soap_in_xsd__int(struct soap*, const char*, xsd__int *, const char*);

#ifndef soap_write_xsd__int
#define soap_write_xsd__int(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:int", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xsd__int
#define soap_read_xsd__int(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xsd__int * SOAP_FMAC4 soap_get_xsd__int(struct soap*, xsd__int *, const char*, const char*);

#define soap_new_xsd__int(soap, n) soap_instantiate_xsd__int(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__int(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__int * SOAP_FMAC2 soap_instantiate_xsd__int(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__int(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__double(struct soap*, const char*, int, const xsd__double *, const char*);
SOAP_FMAC3 xsd__double * SOAP_FMAC4 soap_in_xsd__double(struct soap*, const char*, xsd__double *, const char*);

#ifndef soap_write_xsd__double
#define soap_write_xsd__double(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:double", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xsd__double
#define soap_read_xsd__double(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xsd__double * SOAP_FMAC4 soap_get_xsd__double(struct soap*, xsd__double *, const char*, const char*);

#define soap_new_xsd__double(soap, n) soap_instantiate_xsd__double(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__double(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__double * SOAP_FMAC2 soap_instantiate_xsd__double(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__double(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const xsd__boolean *, const char*);
SOAP_FMAC3 xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, xsd__boolean *, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:boolean", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, xsd__boolean *, const char*, const char*);

#define soap_new_xsd__boolean(soap, n) soap_instantiate_xsd__boolean(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__boolean(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__boolean * SOAP_FMAC2 soap_instantiate_xsd__boolean(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__boolean(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyType(struct soap*, const char*, int, const xsd__anyType *, const char*);
SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_in_xsd__anyType(struct soap*, const char*, xsd__anyType *, const char*);

#ifndef soap_write_xsd__anyType
#define soap_write_xsd__anyType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:anyType", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xsd__anyType
#define soap_read_xsd__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_get_xsd__anyType(struct soap*, xsd__anyType *, const char*, const char*);

#define soap_new_xsd__anyType(soap, n) soap_instantiate_xsd__anyType(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__anyType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__anyType * SOAP_FMAC2 soap_instantiate_xsd__anyType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__getTermsByAnnotationData
#define SOAP_TYPE___ns1__getTermsByAnnotationData (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getTermsByAnnotationData(struct soap*, struct __ns1__getTermsByAnnotationData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getTermsByAnnotationData(struct soap*, const struct __ns1__getTermsByAnnotationData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getTermsByAnnotationData(struct soap*, const char*, int, const struct __ns1__getTermsByAnnotationData *, const char*);
SOAP_FMAC3 struct __ns1__getTermsByAnnotationData * SOAP_FMAC4 soap_in___ns1__getTermsByAnnotationData(struct soap*, const char*, struct __ns1__getTermsByAnnotationData *, const char*);

#ifndef soap_write___ns1__getTermsByAnnotationData
#define soap_write___ns1__getTermsByAnnotationData(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getTermsByAnnotationData(soap, data), 0) || soap_put___ns1__getTermsByAnnotationData(soap, data, "-ns1:getTermsByAnnotationData", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getTermsByAnnotationData(struct soap*, const struct __ns1__getTermsByAnnotationData *, const char*, const char*);

#ifndef soap_read___ns1__getTermsByAnnotationData
#define soap_read___ns1__getTermsByAnnotationData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getTermsByAnnotationData(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getTermsByAnnotationData * SOAP_FMAC4 soap_get___ns1__getTermsByAnnotationData(struct soap*, struct __ns1__getTermsByAnnotationData *, const char*, const char*);

#define soap_new___ns1__getTermsByAnnotationData(soap, n) soap_instantiate___ns1__getTermsByAnnotationData(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getTermsByAnnotationData(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getTermsByAnnotationData * SOAP_FMAC2 soap_instantiate___ns1__getTermsByAnnotationData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getTermsByAnnotationData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__isObsolete
#define SOAP_TYPE___ns1__isObsolete (129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__isObsolete(struct soap*, struct __ns1__isObsolete *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__isObsolete(struct soap*, const struct __ns1__isObsolete *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__isObsolete(struct soap*, const char*, int, const struct __ns1__isObsolete *, const char*);
SOAP_FMAC3 struct __ns1__isObsolete * SOAP_FMAC4 soap_in___ns1__isObsolete(struct soap*, const char*, struct __ns1__isObsolete *, const char*);

#ifndef soap_write___ns1__isObsolete
#define soap_write___ns1__isObsolete(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__isObsolete(soap, data), 0) || soap_put___ns1__isObsolete(soap, data, "-ns1:isObsolete", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__isObsolete(struct soap*, const struct __ns1__isObsolete *, const char*, const char*);

#ifndef soap_read___ns1__isObsolete
#define soap_read___ns1__isObsolete(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__isObsolete(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__isObsolete * SOAP_FMAC4 soap_get___ns1__isObsolete(struct soap*, struct __ns1__isObsolete *, const char*, const char*);

#define soap_new___ns1__isObsolete(soap, n) soap_instantiate___ns1__isObsolete(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__isObsolete(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__isObsolete * SOAP_FMAC2 soap_instantiate___ns1__isObsolete(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__isObsolete(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getChildrenFromRoot
#define SOAP_TYPE___ns1__getChildrenFromRoot (125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getChildrenFromRoot(struct soap*, struct __ns1__getChildrenFromRoot *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getChildrenFromRoot(struct soap*, const struct __ns1__getChildrenFromRoot *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getChildrenFromRoot(struct soap*, const char*, int, const struct __ns1__getChildrenFromRoot *, const char*);
SOAP_FMAC3 struct __ns1__getChildrenFromRoot * SOAP_FMAC4 soap_in___ns1__getChildrenFromRoot(struct soap*, const char*, struct __ns1__getChildrenFromRoot *, const char*);

#ifndef soap_write___ns1__getChildrenFromRoot
#define soap_write___ns1__getChildrenFromRoot(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getChildrenFromRoot(soap, data), 0) || soap_put___ns1__getChildrenFromRoot(soap, data, "-ns1:getChildrenFromRoot", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getChildrenFromRoot(struct soap*, const struct __ns1__getChildrenFromRoot *, const char*, const char*);

#ifndef soap_read___ns1__getChildrenFromRoot
#define soap_read___ns1__getChildrenFromRoot(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getChildrenFromRoot(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getChildrenFromRoot * SOAP_FMAC4 soap_get___ns1__getChildrenFromRoot(struct soap*, struct __ns1__getChildrenFromRoot *, const char*, const char*);

#define soap_new___ns1__getChildrenFromRoot(soap, n) soap_instantiate___ns1__getChildrenFromRoot(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getChildrenFromRoot(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getChildrenFromRoot * SOAP_FMAC2 soap_instantiate___ns1__getChildrenFromRoot(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getChildrenFromRoot(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getTermRelations
#define SOAP_TYPE___ns1__getTermRelations (121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getTermRelations(struct soap*, struct __ns1__getTermRelations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getTermRelations(struct soap*, const struct __ns1__getTermRelations *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getTermRelations(struct soap*, const char*, int, const struct __ns1__getTermRelations *, const char*);
SOAP_FMAC3 struct __ns1__getTermRelations * SOAP_FMAC4 soap_in___ns1__getTermRelations(struct soap*, const char*, struct __ns1__getTermRelations *, const char*);

#ifndef soap_write___ns1__getTermRelations
#define soap_write___ns1__getTermRelations(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getTermRelations(soap, data), 0) || soap_put___ns1__getTermRelations(soap, data, "-ns1:getTermRelations", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getTermRelations(struct soap*, const struct __ns1__getTermRelations *, const char*, const char*);

#ifndef soap_read___ns1__getTermRelations
#define soap_read___ns1__getTermRelations(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getTermRelations(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getTermRelations * SOAP_FMAC4 soap_get___ns1__getTermRelations(struct soap*, struct __ns1__getTermRelations *, const char*, const char*);

#define soap_new___ns1__getTermRelations(soap, n) soap_instantiate___ns1__getTermRelations(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getTermRelations(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getTermRelations * SOAP_FMAC2 soap_instantiate___ns1__getTermRelations(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getTermRelations(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getTermChildren
#define SOAP_TYPE___ns1__getTermChildren (117)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getTermChildren(struct soap*, struct __ns1__getTermChildren *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getTermChildren(struct soap*, const struct __ns1__getTermChildren *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getTermChildren(struct soap*, const char*, int, const struct __ns1__getTermChildren *, const char*);
SOAP_FMAC3 struct __ns1__getTermChildren * SOAP_FMAC4 soap_in___ns1__getTermChildren(struct soap*, const char*, struct __ns1__getTermChildren *, const char*);

#ifndef soap_write___ns1__getTermChildren
#define soap_write___ns1__getTermChildren(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getTermChildren(soap, data), 0) || soap_put___ns1__getTermChildren(soap, data, "-ns1:getTermChildren", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getTermChildren(struct soap*, const struct __ns1__getTermChildren *, const char*, const char*);

#ifndef soap_read___ns1__getTermChildren
#define soap_read___ns1__getTermChildren(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getTermChildren(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getTermChildren * SOAP_FMAC4 soap_get___ns1__getTermChildren(struct soap*, struct __ns1__getTermChildren *, const char*, const char*);

#define soap_new___ns1__getTermChildren(soap, n) soap_instantiate___ns1__getTermChildren(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getTermChildren(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getTermChildren * SOAP_FMAC2 soap_instantiate___ns1__getTermChildren(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getTermChildren(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getTermParents
#define SOAP_TYPE___ns1__getTermParents (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getTermParents(struct soap*, struct __ns1__getTermParents *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getTermParents(struct soap*, const struct __ns1__getTermParents *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getTermParents(struct soap*, const char*, int, const struct __ns1__getTermParents *, const char*);
SOAP_FMAC3 struct __ns1__getTermParents * SOAP_FMAC4 soap_in___ns1__getTermParents(struct soap*, const char*, struct __ns1__getTermParents *, const char*);

#ifndef soap_write___ns1__getTermParents
#define soap_write___ns1__getTermParents(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getTermParents(soap, data), 0) || soap_put___ns1__getTermParents(soap, data, "-ns1:getTermParents", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getTermParents(struct soap*, const struct __ns1__getTermParents *, const char*, const char*);

#ifndef soap_read___ns1__getTermParents
#define soap_read___ns1__getTermParents(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getTermParents(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getTermParents * SOAP_FMAC4 soap_get___ns1__getTermParents(struct soap*, struct __ns1__getTermParents *, const char*, const char*);

#define soap_new___ns1__getTermParents(soap, n) soap_instantiate___ns1__getTermParents(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getTermParents(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getTermParents * SOAP_FMAC2 soap_instantiate___ns1__getTermParents(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getTermParents(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getPrefixedTermsByName
#define SOAP_TYPE___ns1__getPrefixedTermsByName (109)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getPrefixedTermsByName(struct soap*, struct __ns1__getPrefixedTermsByName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getPrefixedTermsByName(struct soap*, const struct __ns1__getPrefixedTermsByName *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getPrefixedTermsByName(struct soap*, const char*, int, const struct __ns1__getPrefixedTermsByName *, const char*);
SOAP_FMAC3 struct __ns1__getPrefixedTermsByName * SOAP_FMAC4 soap_in___ns1__getPrefixedTermsByName(struct soap*, const char*, struct __ns1__getPrefixedTermsByName *, const char*);

#ifndef soap_write___ns1__getPrefixedTermsByName
#define soap_write___ns1__getPrefixedTermsByName(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getPrefixedTermsByName(soap, data), 0) || soap_put___ns1__getPrefixedTermsByName(soap, data, "-ns1:getPrefixedTermsByName", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getPrefixedTermsByName(struct soap*, const struct __ns1__getPrefixedTermsByName *, const char*, const char*);

#ifndef soap_read___ns1__getPrefixedTermsByName
#define soap_read___ns1__getPrefixedTermsByName(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getPrefixedTermsByName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getPrefixedTermsByName * SOAP_FMAC4 soap_get___ns1__getPrefixedTermsByName(struct soap*, struct __ns1__getPrefixedTermsByName *, const char*, const char*);

#define soap_new___ns1__getPrefixedTermsByName(soap, n) soap_instantiate___ns1__getPrefixedTermsByName(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getPrefixedTermsByName(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getPrefixedTermsByName * SOAP_FMAC2 soap_instantiate___ns1__getPrefixedTermsByName(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getPrefixedTermsByName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getTermsByExactName
#define SOAP_TYPE___ns1__getTermsByExactName (105)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getTermsByExactName(struct soap*, struct __ns1__getTermsByExactName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getTermsByExactName(struct soap*, const struct __ns1__getTermsByExactName *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getTermsByExactName(struct soap*, const char*, int, const struct __ns1__getTermsByExactName *, const char*);
SOAP_FMAC3 struct __ns1__getTermsByExactName * SOAP_FMAC4 soap_in___ns1__getTermsByExactName(struct soap*, const char*, struct __ns1__getTermsByExactName *, const char*);

#ifndef soap_write___ns1__getTermsByExactName
#define soap_write___ns1__getTermsByExactName(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getTermsByExactName(soap, data), 0) || soap_put___ns1__getTermsByExactName(soap, data, "-ns1:getTermsByExactName", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getTermsByExactName(struct soap*, const struct __ns1__getTermsByExactName *, const char*, const char*);

#ifndef soap_read___ns1__getTermsByExactName
#define soap_read___ns1__getTermsByExactName(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getTermsByExactName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getTermsByExactName * SOAP_FMAC4 soap_get___ns1__getTermsByExactName(struct soap*, struct __ns1__getTermsByExactName *, const char*, const char*);

#define soap_new___ns1__getTermsByExactName(soap, n) soap_instantiate___ns1__getTermsByExactName(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getTermsByExactName(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getTermsByExactName * SOAP_FMAC2 soap_instantiate___ns1__getTermsByExactName(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getTermsByExactName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getTermsByName
#define SOAP_TYPE___ns1__getTermsByName (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getTermsByName(struct soap*, struct __ns1__getTermsByName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getTermsByName(struct soap*, const struct __ns1__getTermsByName *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getTermsByName(struct soap*, const char*, int, const struct __ns1__getTermsByName *, const char*);
SOAP_FMAC3 struct __ns1__getTermsByName * SOAP_FMAC4 soap_in___ns1__getTermsByName(struct soap*, const char*, struct __ns1__getTermsByName *, const char*);

#ifndef soap_write___ns1__getTermsByName
#define soap_write___ns1__getTermsByName(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getTermsByName(soap, data), 0) || soap_put___ns1__getTermsByName(soap, data, "-ns1:getTermsByName", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getTermsByName(struct soap*, const struct __ns1__getTermsByName *, const char*, const char*);

#ifndef soap_read___ns1__getTermsByName
#define soap_read___ns1__getTermsByName(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getTermsByName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getTermsByName * SOAP_FMAC4 soap_get___ns1__getTermsByName(struct soap*, struct __ns1__getTermsByName *, const char*, const char*);

#define soap_new___ns1__getTermsByName(soap, n) soap_instantiate___ns1__getTermsByName(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getTermsByName(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getTermsByName * SOAP_FMAC2 soap_instantiate___ns1__getTermsByName(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getTermsByName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getRootTerms
#define SOAP_TYPE___ns1__getRootTerms (97)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getRootTerms(struct soap*, struct __ns1__getRootTerms *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getRootTerms(struct soap*, const struct __ns1__getRootTerms *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getRootTerms(struct soap*, const char*, int, const struct __ns1__getRootTerms *, const char*);
SOAP_FMAC3 struct __ns1__getRootTerms * SOAP_FMAC4 soap_in___ns1__getRootTerms(struct soap*, const char*, struct __ns1__getRootTerms *, const char*);

#ifndef soap_write___ns1__getRootTerms
#define soap_write___ns1__getRootTerms(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getRootTerms(soap, data), 0) || soap_put___ns1__getRootTerms(soap, data, "-ns1:getRootTerms", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getRootTerms(struct soap*, const struct __ns1__getRootTerms *, const char*, const char*);

#ifndef soap_read___ns1__getRootTerms
#define soap_read___ns1__getRootTerms(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getRootTerms(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getRootTerms * SOAP_FMAC4 soap_get___ns1__getRootTerms(struct soap*, struct __ns1__getRootTerms *, const char*, const char*);

#define soap_new___ns1__getRootTerms(soap, n) soap_instantiate___ns1__getRootTerms(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getRootTerms(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getRootTerms * SOAP_FMAC2 soap_instantiate___ns1__getRootTerms(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getRootTerms(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getAllTermsFromOntology
#define SOAP_TYPE___ns1__getAllTermsFromOntology (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getAllTermsFromOntology(struct soap*, struct __ns1__getAllTermsFromOntology *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getAllTermsFromOntology(struct soap*, const struct __ns1__getAllTermsFromOntology *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getAllTermsFromOntology(struct soap*, const char*, int, const struct __ns1__getAllTermsFromOntology *, const char*);
SOAP_FMAC3 struct __ns1__getAllTermsFromOntology * SOAP_FMAC4 soap_in___ns1__getAllTermsFromOntology(struct soap*, const char*, struct __ns1__getAllTermsFromOntology *, const char*);

#ifndef soap_write___ns1__getAllTermsFromOntology
#define soap_write___ns1__getAllTermsFromOntology(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getAllTermsFromOntology(soap, data), 0) || soap_put___ns1__getAllTermsFromOntology(soap, data, "-ns1:getAllTermsFromOntology", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getAllTermsFromOntology(struct soap*, const struct __ns1__getAllTermsFromOntology *, const char*, const char*);

#ifndef soap_read___ns1__getAllTermsFromOntology
#define soap_read___ns1__getAllTermsFromOntology(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getAllTermsFromOntology(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getAllTermsFromOntology * SOAP_FMAC4 soap_get___ns1__getAllTermsFromOntology(struct soap*, struct __ns1__getAllTermsFromOntology *, const char*, const char*);

#define soap_new___ns1__getAllTermsFromOntology(soap, n) soap_instantiate___ns1__getAllTermsFromOntology(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getAllTermsFromOntology(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getAllTermsFromOntology * SOAP_FMAC2 soap_instantiate___ns1__getAllTermsFromOntology(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getAllTermsFromOntology(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getOntologyLoadDate
#define SOAP_TYPE___ns1__getOntologyLoadDate (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getOntologyLoadDate(struct soap*, struct __ns1__getOntologyLoadDate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getOntologyLoadDate(struct soap*, const struct __ns1__getOntologyLoadDate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getOntologyLoadDate(struct soap*, const char*, int, const struct __ns1__getOntologyLoadDate *, const char*);
SOAP_FMAC3 struct __ns1__getOntologyLoadDate * SOAP_FMAC4 soap_in___ns1__getOntologyLoadDate(struct soap*, const char*, struct __ns1__getOntologyLoadDate *, const char*);

#ifndef soap_write___ns1__getOntologyLoadDate
#define soap_write___ns1__getOntologyLoadDate(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getOntologyLoadDate(soap, data), 0) || soap_put___ns1__getOntologyLoadDate(soap, data, "-ns1:getOntologyLoadDate", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getOntologyLoadDate(struct soap*, const struct __ns1__getOntologyLoadDate *, const char*, const char*);

#ifndef soap_read___ns1__getOntologyLoadDate
#define soap_read___ns1__getOntologyLoadDate(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getOntologyLoadDate(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getOntologyLoadDate * SOAP_FMAC4 soap_get___ns1__getOntologyLoadDate(struct soap*, struct __ns1__getOntologyLoadDate *, const char*, const char*);

#define soap_new___ns1__getOntologyLoadDate(soap, n) soap_instantiate___ns1__getOntologyLoadDate(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getOntologyLoadDate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getOntologyLoadDate * SOAP_FMAC2 soap_instantiate___ns1__getOntologyLoadDate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getOntologyLoadDate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getOntologyNames
#define SOAP_TYPE___ns1__getOntologyNames (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getOntologyNames(struct soap*, struct __ns1__getOntologyNames *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getOntologyNames(struct soap*, const struct __ns1__getOntologyNames *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getOntologyNames(struct soap*, const char*, int, const struct __ns1__getOntologyNames *, const char*);
SOAP_FMAC3 struct __ns1__getOntologyNames * SOAP_FMAC4 soap_in___ns1__getOntologyNames(struct soap*, const char*, struct __ns1__getOntologyNames *, const char*);

#ifndef soap_write___ns1__getOntologyNames
#define soap_write___ns1__getOntologyNames(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getOntologyNames(soap, data), 0) || soap_put___ns1__getOntologyNames(soap, data, "-ns1:getOntologyNames", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getOntologyNames(struct soap*, const struct __ns1__getOntologyNames *, const char*, const char*);

#ifndef soap_read___ns1__getOntologyNames
#define soap_read___ns1__getOntologyNames(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getOntologyNames(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getOntologyNames * SOAP_FMAC4 soap_get___ns1__getOntologyNames(struct soap*, struct __ns1__getOntologyNames *, const char*, const char*);

#define soap_new___ns1__getOntologyNames(soap, n) soap_instantiate___ns1__getOntologyNames(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getOntologyNames(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getOntologyNames * SOAP_FMAC2 soap_instantiate___ns1__getOntologyNames(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getOntologyNames(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getTermXrefs
#define SOAP_TYPE___ns1__getTermXrefs (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getTermXrefs(struct soap*, struct __ns1__getTermXrefs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getTermXrefs(struct soap*, const struct __ns1__getTermXrefs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getTermXrefs(struct soap*, const char*, int, const struct __ns1__getTermXrefs *, const char*);
SOAP_FMAC3 struct __ns1__getTermXrefs * SOAP_FMAC4 soap_in___ns1__getTermXrefs(struct soap*, const char*, struct __ns1__getTermXrefs *, const char*);

#ifndef soap_write___ns1__getTermXrefs
#define soap_write___ns1__getTermXrefs(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getTermXrefs(soap, data), 0) || soap_put___ns1__getTermXrefs(soap, data, "-ns1:getTermXrefs", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getTermXrefs(struct soap*, const struct __ns1__getTermXrefs *, const char*, const char*);

#ifndef soap_read___ns1__getTermXrefs
#define soap_read___ns1__getTermXrefs(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getTermXrefs(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getTermXrefs * SOAP_FMAC4 soap_get___ns1__getTermXrefs(struct soap*, struct __ns1__getTermXrefs *, const char*, const char*);

#define soap_new___ns1__getTermXrefs(soap, n) soap_instantiate___ns1__getTermXrefs(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getTermXrefs(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getTermXrefs * SOAP_FMAC2 soap_instantiate___ns1__getTermXrefs(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getTermXrefs(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getTermMetadata
#define SOAP_TYPE___ns1__getTermMetadata (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getTermMetadata(struct soap*, struct __ns1__getTermMetadata *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getTermMetadata(struct soap*, const struct __ns1__getTermMetadata *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getTermMetadata(struct soap*, const char*, int, const struct __ns1__getTermMetadata *, const char*);
SOAP_FMAC3 struct __ns1__getTermMetadata * SOAP_FMAC4 soap_in___ns1__getTermMetadata(struct soap*, const char*, struct __ns1__getTermMetadata *, const char*);

#ifndef soap_write___ns1__getTermMetadata
#define soap_write___ns1__getTermMetadata(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getTermMetadata(soap, data), 0) || soap_put___ns1__getTermMetadata(soap, data, "-ns1:getTermMetadata", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getTermMetadata(struct soap*, const struct __ns1__getTermMetadata *, const char*, const char*);

#ifndef soap_read___ns1__getTermMetadata
#define soap_read___ns1__getTermMetadata(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getTermMetadata(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getTermMetadata * SOAP_FMAC4 soap_get___ns1__getTermMetadata(struct soap*, struct __ns1__getTermMetadata *, const char*, const char*);

#define soap_new___ns1__getTermMetadata(soap, n) soap_instantiate___ns1__getTermMetadata(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getTermMetadata(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getTermMetadata * SOAP_FMAC2 soap_instantiate___ns1__getTermMetadata(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getTermMetadata(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getTermById
#define SOAP_TYPE___ns1__getTermById (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getTermById(struct soap*, struct __ns1__getTermById *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getTermById(struct soap*, const struct __ns1__getTermById *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getTermById(struct soap*, const char*, int, const struct __ns1__getTermById *, const char*);
SOAP_FMAC3 struct __ns1__getTermById * SOAP_FMAC4 soap_in___ns1__getTermById(struct soap*, const char*, struct __ns1__getTermById *, const char*);

#ifndef soap_write___ns1__getTermById
#define soap_write___ns1__getTermById(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getTermById(soap, data), 0) || soap_put___ns1__getTermById(soap, data, "-ns1:getTermById", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getTermById(struct soap*, const struct __ns1__getTermById *, const char*, const char*);

#ifndef soap_read___ns1__getTermById
#define soap_read___ns1__getTermById(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getTermById(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getTermById * SOAP_FMAC4 soap_get___ns1__getTermById(struct soap*, struct __ns1__getTermById *, const char*, const char*);

#define soap_new___ns1__getTermById(soap, n) soap_instantiate___ns1__getTermById(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getTermById(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getTermById * SOAP_FMAC2 soap_instantiate___ns1__getTermById(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getTermById(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getVersion
#define SOAP_TYPE___ns1__getVersion (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getVersion(struct soap*, struct __ns1__getVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getVersion(struct soap*, const struct __ns1__getVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getVersion(struct soap*, const char*, int, const struct __ns1__getVersion *, const char*);
SOAP_FMAC3 struct __ns1__getVersion * SOAP_FMAC4 soap_in___ns1__getVersion(struct soap*, const char*, struct __ns1__getVersion *, const char*);

#ifndef soap_write___ns1__getVersion
#define soap_write___ns1__getVersion(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getVersion(soap, data), 0) || soap_put___ns1__getVersion(soap, data, "-ns1:getVersion", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getVersion(struct soap*, const struct __ns1__getVersion *, const char*, const char*);

#ifndef soap_read___ns1__getVersion
#define soap_read___ns1__getVersion(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getVersion * SOAP_FMAC4 soap_get___ns1__getVersion(struct soap*, struct __ns1__getVersion *, const char*, const char*);

#define soap_new___ns1__getVersion(soap, n) soap_instantiate___ns1__getVersion(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getVersion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getVersion * SOAP_FMAC2 soap_instantiate___ns1__getVersion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__getTermsByAnnotationDataResponse
#define SOAP_TYPE_PointerTo_ns1__getTermsByAnnotationDataResponse (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermsByAnnotationDataResponse(struct soap*, _ns1__getTermsByAnnotationDataResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermsByAnnotationDataResponse(struct soap*, const char *, int, _ns1__getTermsByAnnotationDataResponse *const*, const char *);
SOAP_FMAC3 _ns1__getTermsByAnnotationDataResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermsByAnnotationDataResponse(struct soap*, const char*, _ns1__getTermsByAnnotationDataResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermsByAnnotationDataResponse
#define soap_write_PointerTo_ns1__getTermsByAnnotationDataResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermsByAnnotationDataResponse(soap, data), 0) || soap_put_PointerTo_ns1__getTermsByAnnotationDataResponse(soap, data, "ns1:getTermsByAnnotationDataResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermsByAnnotationDataResponse(struct soap*, _ns1__getTermsByAnnotationDataResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermsByAnnotationDataResponse
#define soap_read_PointerTo_ns1__getTermsByAnnotationDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermsByAnnotationDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByAnnotationDataResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermsByAnnotationDataResponse(struct soap*, _ns1__getTermsByAnnotationDataResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermsByAnnotationData
#define SOAP_TYPE_PointerTo_ns1__getTermsByAnnotationData (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermsByAnnotationData(struct soap*, _ns1__getTermsByAnnotationData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermsByAnnotationData(struct soap*, const char *, int, _ns1__getTermsByAnnotationData *const*, const char *);
SOAP_FMAC3 _ns1__getTermsByAnnotationData ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermsByAnnotationData(struct soap*, const char*, _ns1__getTermsByAnnotationData **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermsByAnnotationData
#define soap_write_PointerTo_ns1__getTermsByAnnotationData(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermsByAnnotationData(soap, data), 0) || soap_put_PointerTo_ns1__getTermsByAnnotationData(soap, data, "ns1:getTermsByAnnotationData", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermsByAnnotationData(struct soap*, _ns1__getTermsByAnnotationData *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermsByAnnotationData
#define soap_read_PointerTo_ns1__getTermsByAnnotationData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermsByAnnotationData(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByAnnotationData ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermsByAnnotationData(struct soap*, _ns1__getTermsByAnnotationData **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__isObsoleteResponse
#define SOAP_TYPE_PointerTo_ns1__isObsoleteResponse (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__isObsoleteResponse(struct soap*, _ns1__isObsoleteResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__isObsoleteResponse(struct soap*, const char *, int, _ns1__isObsoleteResponse *const*, const char *);
SOAP_FMAC3 _ns1__isObsoleteResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__isObsoleteResponse(struct soap*, const char*, _ns1__isObsoleteResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__isObsoleteResponse
#define soap_write_PointerTo_ns1__isObsoleteResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__isObsoleteResponse(soap, data), 0) || soap_put_PointerTo_ns1__isObsoleteResponse(soap, data, "ns1:isObsoleteResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__isObsoleteResponse(struct soap*, _ns1__isObsoleteResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__isObsoleteResponse
#define soap_read_PointerTo_ns1__isObsoleteResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__isObsoleteResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__isObsoleteResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__isObsoleteResponse(struct soap*, _ns1__isObsoleteResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__isObsolete
#define SOAP_TYPE_PointerTo_ns1__isObsolete (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__isObsolete(struct soap*, _ns1__isObsolete *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__isObsolete(struct soap*, const char *, int, _ns1__isObsolete *const*, const char *);
SOAP_FMAC3 _ns1__isObsolete ** SOAP_FMAC4 soap_in_PointerTo_ns1__isObsolete(struct soap*, const char*, _ns1__isObsolete **, const char*);

#ifndef soap_write_PointerTo_ns1__isObsolete
#define soap_write_PointerTo_ns1__isObsolete(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__isObsolete(soap, data), 0) || soap_put_PointerTo_ns1__isObsolete(soap, data, "ns1:isObsolete", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__isObsolete(struct soap*, _ns1__isObsolete *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__isObsolete
#define soap_read_PointerTo_ns1__isObsolete(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__isObsolete(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__isObsolete ** SOAP_FMAC4 soap_get_PointerTo_ns1__isObsolete(struct soap*, _ns1__isObsolete **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getChildrenFromRootResponse
#define SOAP_TYPE_PointerTo_ns1__getChildrenFromRootResponse (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getChildrenFromRootResponse(struct soap*, _ns1__getChildrenFromRootResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getChildrenFromRootResponse(struct soap*, const char *, int, _ns1__getChildrenFromRootResponse *const*, const char *);
SOAP_FMAC3 _ns1__getChildrenFromRootResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getChildrenFromRootResponse(struct soap*, const char*, _ns1__getChildrenFromRootResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getChildrenFromRootResponse
#define soap_write_PointerTo_ns1__getChildrenFromRootResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getChildrenFromRootResponse(soap, data), 0) || soap_put_PointerTo_ns1__getChildrenFromRootResponse(soap, data, "ns1:getChildrenFromRootResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getChildrenFromRootResponse(struct soap*, _ns1__getChildrenFromRootResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getChildrenFromRootResponse
#define soap_read_PointerTo_ns1__getChildrenFromRootResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getChildrenFromRootResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getChildrenFromRootResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getChildrenFromRootResponse(struct soap*, _ns1__getChildrenFromRootResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getChildrenFromRoot
#define SOAP_TYPE_PointerTo_ns1__getChildrenFromRoot (122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getChildrenFromRoot(struct soap*, _ns1__getChildrenFromRoot *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getChildrenFromRoot(struct soap*, const char *, int, _ns1__getChildrenFromRoot *const*, const char *);
SOAP_FMAC3 _ns1__getChildrenFromRoot ** SOAP_FMAC4 soap_in_PointerTo_ns1__getChildrenFromRoot(struct soap*, const char*, _ns1__getChildrenFromRoot **, const char*);

#ifndef soap_write_PointerTo_ns1__getChildrenFromRoot
#define soap_write_PointerTo_ns1__getChildrenFromRoot(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getChildrenFromRoot(soap, data), 0) || soap_put_PointerTo_ns1__getChildrenFromRoot(soap, data, "ns1:getChildrenFromRoot", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getChildrenFromRoot(struct soap*, _ns1__getChildrenFromRoot *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getChildrenFromRoot
#define soap_read_PointerTo_ns1__getChildrenFromRoot(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getChildrenFromRoot(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getChildrenFromRoot ** SOAP_FMAC4 soap_get_PointerTo_ns1__getChildrenFromRoot(struct soap*, _ns1__getChildrenFromRoot **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermRelationsResponse
#define SOAP_TYPE_PointerTo_ns1__getTermRelationsResponse (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermRelationsResponse(struct soap*, _ns1__getTermRelationsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermRelationsResponse(struct soap*, const char *, int, _ns1__getTermRelationsResponse *const*, const char *);
SOAP_FMAC3 _ns1__getTermRelationsResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermRelationsResponse(struct soap*, const char*, _ns1__getTermRelationsResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermRelationsResponse
#define soap_write_PointerTo_ns1__getTermRelationsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermRelationsResponse(soap, data), 0) || soap_put_PointerTo_ns1__getTermRelationsResponse(soap, data, "ns1:getTermRelationsResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermRelationsResponse(struct soap*, _ns1__getTermRelationsResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermRelationsResponse
#define soap_read_PointerTo_ns1__getTermRelationsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermRelationsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermRelationsResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermRelationsResponse(struct soap*, _ns1__getTermRelationsResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermRelations
#define SOAP_TYPE_PointerTo_ns1__getTermRelations (118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermRelations(struct soap*, _ns1__getTermRelations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermRelations(struct soap*, const char *, int, _ns1__getTermRelations *const*, const char *);
SOAP_FMAC3 _ns1__getTermRelations ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermRelations(struct soap*, const char*, _ns1__getTermRelations **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermRelations
#define soap_write_PointerTo_ns1__getTermRelations(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermRelations(soap, data), 0) || soap_put_PointerTo_ns1__getTermRelations(soap, data, "ns1:getTermRelations", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermRelations(struct soap*, _ns1__getTermRelations *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermRelations
#define soap_read_PointerTo_ns1__getTermRelations(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermRelations(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermRelations ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermRelations(struct soap*, _ns1__getTermRelations **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermChildrenResponse
#define SOAP_TYPE_PointerTo_ns1__getTermChildrenResponse (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermChildrenResponse(struct soap*, _ns1__getTermChildrenResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermChildrenResponse(struct soap*, const char *, int, _ns1__getTermChildrenResponse *const*, const char *);
SOAP_FMAC3 _ns1__getTermChildrenResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermChildrenResponse(struct soap*, const char*, _ns1__getTermChildrenResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermChildrenResponse
#define soap_write_PointerTo_ns1__getTermChildrenResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermChildrenResponse(soap, data), 0) || soap_put_PointerTo_ns1__getTermChildrenResponse(soap, data, "ns1:getTermChildrenResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermChildrenResponse(struct soap*, _ns1__getTermChildrenResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermChildrenResponse
#define soap_read_PointerTo_ns1__getTermChildrenResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermChildrenResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermChildrenResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermChildrenResponse(struct soap*, _ns1__getTermChildrenResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermChildren
#define SOAP_TYPE_PointerTo_ns1__getTermChildren (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermChildren(struct soap*, _ns1__getTermChildren *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermChildren(struct soap*, const char *, int, _ns1__getTermChildren *const*, const char *);
SOAP_FMAC3 _ns1__getTermChildren ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermChildren(struct soap*, const char*, _ns1__getTermChildren **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermChildren
#define soap_write_PointerTo_ns1__getTermChildren(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermChildren(soap, data), 0) || soap_put_PointerTo_ns1__getTermChildren(soap, data, "ns1:getTermChildren", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermChildren(struct soap*, _ns1__getTermChildren *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermChildren
#define soap_read_PointerTo_ns1__getTermChildren(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermChildren(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermChildren ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermChildren(struct soap*, _ns1__getTermChildren **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermParentsResponse
#define SOAP_TYPE_PointerTo_ns1__getTermParentsResponse (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermParentsResponse(struct soap*, _ns1__getTermParentsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermParentsResponse(struct soap*, const char *, int, _ns1__getTermParentsResponse *const*, const char *);
SOAP_FMAC3 _ns1__getTermParentsResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermParentsResponse(struct soap*, const char*, _ns1__getTermParentsResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermParentsResponse
#define soap_write_PointerTo_ns1__getTermParentsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermParentsResponse(soap, data), 0) || soap_put_PointerTo_ns1__getTermParentsResponse(soap, data, "ns1:getTermParentsResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermParentsResponse(struct soap*, _ns1__getTermParentsResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermParentsResponse
#define soap_read_PointerTo_ns1__getTermParentsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermParentsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermParentsResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermParentsResponse(struct soap*, _ns1__getTermParentsResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermParents
#define SOAP_TYPE_PointerTo_ns1__getTermParents (110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermParents(struct soap*, _ns1__getTermParents *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermParents(struct soap*, const char *, int, _ns1__getTermParents *const*, const char *);
SOAP_FMAC3 _ns1__getTermParents ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermParents(struct soap*, const char*, _ns1__getTermParents **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermParents
#define soap_write_PointerTo_ns1__getTermParents(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermParents(soap, data), 0) || soap_put_PointerTo_ns1__getTermParents(soap, data, "ns1:getTermParents", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermParents(struct soap*, _ns1__getTermParents *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermParents
#define soap_read_PointerTo_ns1__getTermParents(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermParents(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermParents ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermParents(struct soap*, _ns1__getTermParents **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getPrefixedTermsByNameResponse
#define SOAP_TYPE_PointerTo_ns1__getPrefixedTermsByNameResponse (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getPrefixedTermsByNameResponse(struct soap*, _ns1__getPrefixedTermsByNameResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getPrefixedTermsByNameResponse(struct soap*, const char *, int, _ns1__getPrefixedTermsByNameResponse *const*, const char *);
SOAP_FMAC3 _ns1__getPrefixedTermsByNameResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getPrefixedTermsByNameResponse(struct soap*, const char*, _ns1__getPrefixedTermsByNameResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getPrefixedTermsByNameResponse
#define soap_write_PointerTo_ns1__getPrefixedTermsByNameResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getPrefixedTermsByNameResponse(soap, data), 0) || soap_put_PointerTo_ns1__getPrefixedTermsByNameResponse(soap, data, "ns1:getPrefixedTermsByNameResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getPrefixedTermsByNameResponse(struct soap*, _ns1__getPrefixedTermsByNameResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getPrefixedTermsByNameResponse
#define soap_read_PointerTo_ns1__getPrefixedTermsByNameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getPrefixedTermsByNameResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getPrefixedTermsByNameResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getPrefixedTermsByNameResponse(struct soap*, _ns1__getPrefixedTermsByNameResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getPrefixedTermsByName
#define SOAP_TYPE_PointerTo_ns1__getPrefixedTermsByName (106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getPrefixedTermsByName(struct soap*, _ns1__getPrefixedTermsByName *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getPrefixedTermsByName(struct soap*, const char *, int, _ns1__getPrefixedTermsByName *const*, const char *);
SOAP_FMAC3 _ns1__getPrefixedTermsByName ** SOAP_FMAC4 soap_in_PointerTo_ns1__getPrefixedTermsByName(struct soap*, const char*, _ns1__getPrefixedTermsByName **, const char*);

#ifndef soap_write_PointerTo_ns1__getPrefixedTermsByName
#define soap_write_PointerTo_ns1__getPrefixedTermsByName(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getPrefixedTermsByName(soap, data), 0) || soap_put_PointerTo_ns1__getPrefixedTermsByName(soap, data, "ns1:getPrefixedTermsByName", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getPrefixedTermsByName(struct soap*, _ns1__getPrefixedTermsByName *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getPrefixedTermsByName
#define soap_read_PointerTo_ns1__getPrefixedTermsByName(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getPrefixedTermsByName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getPrefixedTermsByName ** SOAP_FMAC4 soap_get_PointerTo_ns1__getPrefixedTermsByName(struct soap*, _ns1__getPrefixedTermsByName **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermsByExactNameResponse
#define SOAP_TYPE_PointerTo_ns1__getTermsByExactNameResponse (103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermsByExactNameResponse(struct soap*, _ns1__getTermsByExactNameResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermsByExactNameResponse(struct soap*, const char *, int, _ns1__getTermsByExactNameResponse *const*, const char *);
SOAP_FMAC3 _ns1__getTermsByExactNameResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermsByExactNameResponse(struct soap*, const char*, _ns1__getTermsByExactNameResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermsByExactNameResponse
#define soap_write_PointerTo_ns1__getTermsByExactNameResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermsByExactNameResponse(soap, data), 0) || soap_put_PointerTo_ns1__getTermsByExactNameResponse(soap, data, "ns1:getTermsByExactNameResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermsByExactNameResponse(struct soap*, _ns1__getTermsByExactNameResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermsByExactNameResponse
#define soap_read_PointerTo_ns1__getTermsByExactNameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermsByExactNameResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByExactNameResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermsByExactNameResponse(struct soap*, _ns1__getTermsByExactNameResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermsByExactName
#define SOAP_TYPE_PointerTo_ns1__getTermsByExactName (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermsByExactName(struct soap*, _ns1__getTermsByExactName *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermsByExactName(struct soap*, const char *, int, _ns1__getTermsByExactName *const*, const char *);
SOAP_FMAC3 _ns1__getTermsByExactName ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermsByExactName(struct soap*, const char*, _ns1__getTermsByExactName **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermsByExactName
#define soap_write_PointerTo_ns1__getTermsByExactName(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermsByExactName(soap, data), 0) || soap_put_PointerTo_ns1__getTermsByExactName(soap, data, "ns1:getTermsByExactName", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermsByExactName(struct soap*, _ns1__getTermsByExactName *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermsByExactName
#define soap_read_PointerTo_ns1__getTermsByExactName(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermsByExactName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByExactName ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermsByExactName(struct soap*, _ns1__getTermsByExactName **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermsByNameResponse
#define SOAP_TYPE_PointerTo_ns1__getTermsByNameResponse (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermsByNameResponse(struct soap*, _ns1__getTermsByNameResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermsByNameResponse(struct soap*, const char *, int, _ns1__getTermsByNameResponse *const*, const char *);
SOAP_FMAC3 _ns1__getTermsByNameResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermsByNameResponse(struct soap*, const char*, _ns1__getTermsByNameResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermsByNameResponse
#define soap_write_PointerTo_ns1__getTermsByNameResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermsByNameResponse(soap, data), 0) || soap_put_PointerTo_ns1__getTermsByNameResponse(soap, data, "ns1:getTermsByNameResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermsByNameResponse(struct soap*, _ns1__getTermsByNameResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermsByNameResponse
#define soap_read_PointerTo_ns1__getTermsByNameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermsByNameResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByNameResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermsByNameResponse(struct soap*, _ns1__getTermsByNameResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermsByName
#define SOAP_TYPE_PointerTo_ns1__getTermsByName (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermsByName(struct soap*, _ns1__getTermsByName *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermsByName(struct soap*, const char *, int, _ns1__getTermsByName *const*, const char *);
SOAP_FMAC3 _ns1__getTermsByName ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermsByName(struct soap*, const char*, _ns1__getTermsByName **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermsByName
#define soap_write_PointerTo_ns1__getTermsByName(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermsByName(soap, data), 0) || soap_put_PointerTo_ns1__getTermsByName(soap, data, "ns1:getTermsByName", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermsByName(struct soap*, _ns1__getTermsByName *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermsByName
#define soap_read_PointerTo_ns1__getTermsByName(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermsByName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermsByName ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermsByName(struct soap*, _ns1__getTermsByName **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getRootTermsResponse
#define SOAP_TYPE_PointerTo_ns1__getRootTermsResponse (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getRootTermsResponse(struct soap*, _ns1__getRootTermsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getRootTermsResponse(struct soap*, const char *, int, _ns1__getRootTermsResponse *const*, const char *);
SOAP_FMAC3 _ns1__getRootTermsResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getRootTermsResponse(struct soap*, const char*, _ns1__getRootTermsResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getRootTermsResponse
#define soap_write_PointerTo_ns1__getRootTermsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getRootTermsResponse(soap, data), 0) || soap_put_PointerTo_ns1__getRootTermsResponse(soap, data, "ns1:getRootTermsResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getRootTermsResponse(struct soap*, _ns1__getRootTermsResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getRootTermsResponse
#define soap_read_PointerTo_ns1__getRootTermsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getRootTermsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getRootTermsResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getRootTermsResponse(struct soap*, _ns1__getRootTermsResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getRootTerms
#define SOAP_TYPE_PointerTo_ns1__getRootTerms (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getRootTerms(struct soap*, _ns1__getRootTerms *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getRootTerms(struct soap*, const char *, int, _ns1__getRootTerms *const*, const char *);
SOAP_FMAC3 _ns1__getRootTerms ** SOAP_FMAC4 soap_in_PointerTo_ns1__getRootTerms(struct soap*, const char*, _ns1__getRootTerms **, const char*);

#ifndef soap_write_PointerTo_ns1__getRootTerms
#define soap_write_PointerTo_ns1__getRootTerms(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getRootTerms(soap, data), 0) || soap_put_PointerTo_ns1__getRootTerms(soap, data, "ns1:getRootTerms", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getRootTerms(struct soap*, _ns1__getRootTerms *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getRootTerms
#define soap_read_PointerTo_ns1__getRootTerms(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getRootTerms(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getRootTerms ** SOAP_FMAC4 soap_get_PointerTo_ns1__getRootTerms(struct soap*, _ns1__getRootTerms **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getAllTermsFromOntologyResponse
#define SOAP_TYPE_PointerTo_ns1__getAllTermsFromOntologyResponse (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getAllTermsFromOntologyResponse(struct soap*, _ns1__getAllTermsFromOntologyResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getAllTermsFromOntologyResponse(struct soap*, const char *, int, _ns1__getAllTermsFromOntologyResponse *const*, const char *);
SOAP_FMAC3 _ns1__getAllTermsFromOntologyResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getAllTermsFromOntologyResponse(struct soap*, const char*, _ns1__getAllTermsFromOntologyResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getAllTermsFromOntologyResponse
#define soap_write_PointerTo_ns1__getAllTermsFromOntologyResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getAllTermsFromOntologyResponse(soap, data), 0) || soap_put_PointerTo_ns1__getAllTermsFromOntologyResponse(soap, data, "ns1:getAllTermsFromOntologyResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getAllTermsFromOntologyResponse(struct soap*, _ns1__getAllTermsFromOntologyResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getAllTermsFromOntologyResponse
#define soap_read_PointerTo_ns1__getAllTermsFromOntologyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getAllTermsFromOntologyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getAllTermsFromOntologyResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getAllTermsFromOntologyResponse(struct soap*, _ns1__getAllTermsFromOntologyResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getAllTermsFromOntology
#define SOAP_TYPE_PointerTo_ns1__getAllTermsFromOntology (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getAllTermsFromOntology(struct soap*, _ns1__getAllTermsFromOntology *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getAllTermsFromOntology(struct soap*, const char *, int, _ns1__getAllTermsFromOntology *const*, const char *);
SOAP_FMAC3 _ns1__getAllTermsFromOntology ** SOAP_FMAC4 soap_in_PointerTo_ns1__getAllTermsFromOntology(struct soap*, const char*, _ns1__getAllTermsFromOntology **, const char*);

#ifndef soap_write_PointerTo_ns1__getAllTermsFromOntology
#define soap_write_PointerTo_ns1__getAllTermsFromOntology(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getAllTermsFromOntology(soap, data), 0) || soap_put_PointerTo_ns1__getAllTermsFromOntology(soap, data, "ns1:getAllTermsFromOntology", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getAllTermsFromOntology(struct soap*, _ns1__getAllTermsFromOntology *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getAllTermsFromOntology
#define soap_read_PointerTo_ns1__getAllTermsFromOntology(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getAllTermsFromOntology(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getAllTermsFromOntology ** SOAP_FMAC4 soap_get_PointerTo_ns1__getAllTermsFromOntology(struct soap*, _ns1__getAllTermsFromOntology **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getOntologyLoadDateResponse
#define SOAP_TYPE_PointerTo_ns1__getOntologyLoadDateResponse (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getOntologyLoadDateResponse(struct soap*, _ns1__getOntologyLoadDateResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getOntologyLoadDateResponse(struct soap*, const char *, int, _ns1__getOntologyLoadDateResponse *const*, const char *);
SOAP_FMAC3 _ns1__getOntologyLoadDateResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getOntologyLoadDateResponse(struct soap*, const char*, _ns1__getOntologyLoadDateResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getOntologyLoadDateResponse
#define soap_write_PointerTo_ns1__getOntologyLoadDateResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getOntologyLoadDateResponse(soap, data), 0) || soap_put_PointerTo_ns1__getOntologyLoadDateResponse(soap, data, "ns1:getOntologyLoadDateResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getOntologyLoadDateResponse(struct soap*, _ns1__getOntologyLoadDateResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getOntologyLoadDateResponse
#define soap_read_PointerTo_ns1__getOntologyLoadDateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getOntologyLoadDateResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getOntologyLoadDateResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getOntologyLoadDateResponse(struct soap*, _ns1__getOntologyLoadDateResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getOntologyLoadDate
#define SOAP_TYPE_PointerTo_ns1__getOntologyLoadDate (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getOntologyLoadDate(struct soap*, _ns1__getOntologyLoadDate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getOntologyLoadDate(struct soap*, const char *, int, _ns1__getOntologyLoadDate *const*, const char *);
SOAP_FMAC3 _ns1__getOntologyLoadDate ** SOAP_FMAC4 soap_in_PointerTo_ns1__getOntologyLoadDate(struct soap*, const char*, _ns1__getOntologyLoadDate **, const char*);

#ifndef soap_write_PointerTo_ns1__getOntologyLoadDate
#define soap_write_PointerTo_ns1__getOntologyLoadDate(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getOntologyLoadDate(soap, data), 0) || soap_put_PointerTo_ns1__getOntologyLoadDate(soap, data, "ns1:getOntologyLoadDate", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getOntologyLoadDate(struct soap*, _ns1__getOntologyLoadDate *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getOntologyLoadDate
#define soap_read_PointerTo_ns1__getOntologyLoadDate(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getOntologyLoadDate(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getOntologyLoadDate ** SOAP_FMAC4 soap_get_PointerTo_ns1__getOntologyLoadDate(struct soap*, _ns1__getOntologyLoadDate **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getOntologyNamesResponse
#define SOAP_TYPE_PointerTo_ns1__getOntologyNamesResponse (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getOntologyNamesResponse(struct soap*, _ns1__getOntologyNamesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getOntologyNamesResponse(struct soap*, const char *, int, _ns1__getOntologyNamesResponse *const*, const char *);
SOAP_FMAC3 _ns1__getOntologyNamesResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getOntologyNamesResponse(struct soap*, const char*, _ns1__getOntologyNamesResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getOntologyNamesResponse
#define soap_write_PointerTo_ns1__getOntologyNamesResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getOntologyNamesResponse(soap, data), 0) || soap_put_PointerTo_ns1__getOntologyNamesResponse(soap, data, "ns1:getOntologyNamesResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getOntologyNamesResponse(struct soap*, _ns1__getOntologyNamesResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getOntologyNamesResponse
#define soap_read_PointerTo_ns1__getOntologyNamesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getOntologyNamesResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getOntologyNamesResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getOntologyNamesResponse(struct soap*, _ns1__getOntologyNamesResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getOntologyNames
#define SOAP_TYPE_PointerTo_ns1__getOntologyNames (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getOntologyNames(struct soap*, _ns1__getOntologyNames *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getOntologyNames(struct soap*, const char *, int, _ns1__getOntologyNames *const*, const char *);
SOAP_FMAC3 _ns1__getOntologyNames ** SOAP_FMAC4 soap_in_PointerTo_ns1__getOntologyNames(struct soap*, const char*, _ns1__getOntologyNames **, const char*);

#ifndef soap_write_PointerTo_ns1__getOntologyNames
#define soap_write_PointerTo_ns1__getOntologyNames(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getOntologyNames(soap, data), 0) || soap_put_PointerTo_ns1__getOntologyNames(soap, data, "ns1:getOntologyNames", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getOntologyNames(struct soap*, _ns1__getOntologyNames *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getOntologyNames
#define soap_read_PointerTo_ns1__getOntologyNames(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getOntologyNames(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getOntologyNames ** SOAP_FMAC4 soap_get_PointerTo_ns1__getOntologyNames(struct soap*, _ns1__getOntologyNames **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermXrefsResponse
#define SOAP_TYPE_PointerTo_ns1__getTermXrefsResponse (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermXrefsResponse(struct soap*, _ns1__getTermXrefsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermXrefsResponse(struct soap*, const char *, int, _ns1__getTermXrefsResponse *const*, const char *);
SOAP_FMAC3 _ns1__getTermXrefsResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermXrefsResponse(struct soap*, const char*, _ns1__getTermXrefsResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermXrefsResponse
#define soap_write_PointerTo_ns1__getTermXrefsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermXrefsResponse(soap, data), 0) || soap_put_PointerTo_ns1__getTermXrefsResponse(soap, data, "ns1:getTermXrefsResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermXrefsResponse(struct soap*, _ns1__getTermXrefsResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermXrefsResponse
#define soap_read_PointerTo_ns1__getTermXrefsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermXrefsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermXrefsResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermXrefsResponse(struct soap*, _ns1__getTermXrefsResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermXrefs
#define SOAP_TYPE_PointerTo_ns1__getTermXrefs (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermXrefs(struct soap*, _ns1__getTermXrefs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermXrefs(struct soap*, const char *, int, _ns1__getTermXrefs *const*, const char *);
SOAP_FMAC3 _ns1__getTermXrefs ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermXrefs(struct soap*, const char*, _ns1__getTermXrefs **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermXrefs
#define soap_write_PointerTo_ns1__getTermXrefs(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermXrefs(soap, data), 0) || soap_put_PointerTo_ns1__getTermXrefs(soap, data, "ns1:getTermXrefs", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermXrefs(struct soap*, _ns1__getTermXrefs *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermXrefs
#define soap_read_PointerTo_ns1__getTermXrefs(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermXrefs(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermXrefs ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermXrefs(struct soap*, _ns1__getTermXrefs **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermMetadataResponse
#define SOAP_TYPE_PointerTo_ns1__getTermMetadataResponse (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermMetadataResponse(struct soap*, _ns1__getTermMetadataResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermMetadataResponse(struct soap*, const char *, int, _ns1__getTermMetadataResponse *const*, const char *);
SOAP_FMAC3 _ns1__getTermMetadataResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermMetadataResponse(struct soap*, const char*, _ns1__getTermMetadataResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermMetadataResponse
#define soap_write_PointerTo_ns1__getTermMetadataResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermMetadataResponse(soap, data), 0) || soap_put_PointerTo_ns1__getTermMetadataResponse(soap, data, "ns1:getTermMetadataResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermMetadataResponse(struct soap*, _ns1__getTermMetadataResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermMetadataResponse
#define soap_read_PointerTo_ns1__getTermMetadataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermMetadataResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermMetadataResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermMetadataResponse(struct soap*, _ns1__getTermMetadataResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermMetadata
#define SOAP_TYPE_PointerTo_ns1__getTermMetadata (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermMetadata(struct soap*, _ns1__getTermMetadata *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermMetadata(struct soap*, const char *, int, _ns1__getTermMetadata *const*, const char *);
SOAP_FMAC3 _ns1__getTermMetadata ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermMetadata(struct soap*, const char*, _ns1__getTermMetadata **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermMetadata
#define soap_write_PointerTo_ns1__getTermMetadata(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermMetadata(soap, data), 0) || soap_put_PointerTo_ns1__getTermMetadata(soap, data, "ns1:getTermMetadata", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermMetadata(struct soap*, _ns1__getTermMetadata *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermMetadata
#define soap_read_PointerTo_ns1__getTermMetadata(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermMetadata(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermMetadata ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermMetadata(struct soap*, _ns1__getTermMetadata **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermByIdResponse
#define SOAP_TYPE_PointerTo_ns1__getTermByIdResponse (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermByIdResponse(struct soap*, _ns1__getTermByIdResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermByIdResponse(struct soap*, const char *, int, _ns1__getTermByIdResponse *const*, const char *);
SOAP_FMAC3 _ns1__getTermByIdResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermByIdResponse(struct soap*, const char*, _ns1__getTermByIdResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermByIdResponse
#define soap_write_PointerTo_ns1__getTermByIdResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermByIdResponse(soap, data), 0) || soap_put_PointerTo_ns1__getTermByIdResponse(soap, data, "ns1:getTermByIdResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermByIdResponse(struct soap*, _ns1__getTermByIdResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermByIdResponse
#define soap_read_PointerTo_ns1__getTermByIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermByIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermByIdResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermByIdResponse(struct soap*, _ns1__getTermByIdResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getTermById
#define SOAP_TYPE_PointerTo_ns1__getTermById (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getTermById(struct soap*, _ns1__getTermById *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getTermById(struct soap*, const char *, int, _ns1__getTermById *const*, const char *);
SOAP_FMAC3 _ns1__getTermById ** SOAP_FMAC4 soap_in_PointerTo_ns1__getTermById(struct soap*, const char*, _ns1__getTermById **, const char*);

#ifndef soap_write_PointerTo_ns1__getTermById
#define soap_write_PointerTo_ns1__getTermById(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getTermById(soap, data), 0) || soap_put_PointerTo_ns1__getTermById(soap, data, "ns1:getTermById", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getTermById(struct soap*, _ns1__getTermById *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getTermById
#define soap_read_PointerTo_ns1__getTermById(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getTermById(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getTermById ** SOAP_FMAC4 soap_get_PointerTo_ns1__getTermById(struct soap*, _ns1__getTermById **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getVersionResponse
#define SOAP_TYPE_PointerTo_ns1__getVersionResponse (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getVersionResponse(struct soap*, _ns1__getVersionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getVersionResponse(struct soap*, const char *, int, _ns1__getVersionResponse *const*, const char *);
SOAP_FMAC3 _ns1__getVersionResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getVersionResponse(struct soap*, const char*, _ns1__getVersionResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getVersionResponse
#define soap_write_PointerTo_ns1__getVersionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getVersionResponse(soap, data), 0) || soap_put_PointerTo_ns1__getVersionResponse(soap, data, "ns1:getVersionResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getVersionResponse(struct soap*, _ns1__getVersionResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getVersionResponse
#define soap_read_PointerTo_ns1__getVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getVersionResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getVersionResponse(struct soap*, _ns1__getVersionResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getVersion
#define SOAP_TYPE_PointerTo_ns1__getVersion (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getVersion(struct soap*, _ns1__getVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getVersion(struct soap*, const char *, int, _ns1__getVersion *const*, const char *);
SOAP_FMAC3 _ns1__getVersion ** SOAP_FMAC4 soap_in_PointerTo_ns1__getVersion(struct soap*, const char*, _ns1__getVersion **, const char*);

#ifndef soap_write_PointerTo_ns1__getVersion
#define soap_write_PointerTo_ns1__getVersion(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getVersion(soap, data), 0) || soap_put_PointerTo_ns1__getVersion(soap, data, "ns1:getVersion", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getVersion(struct soap*, _ns1__getVersion *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getVersion
#define soap_read_PointerTo_ns1__getVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getVersion ** SOAP_FMAC4 soap_get_PointerTo_ns1__getVersion(struct soap*, _ns1__getVersion **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTodouble
#define SOAP_TYPE_PointerTodouble (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodouble(struct soap*, double *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodouble(struct soap*, const char *, int, double *const*, const char *);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_in_PointerTodouble(struct soap*, const char*, double **, const char*);

#ifndef soap_write_PointerTodouble
#define soap_write_PointerTodouble(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTodouble(soap, data), 0) || soap_put_PointerTodouble(soap, data, "double", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodouble(struct soap*, double *const*, const char*, const char*);

#ifndef soap_read_PointerTodouble
#define soap_read_PointerTodouble(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTodouble(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double ** SOAP_FMAC4 soap_get_PointerTodouble(struct soap*, double **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons2__mapItem
#define SOAP_TYPE_PointerTons2__mapItem (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__mapItem(struct soap*, ns2__mapItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__mapItem(struct soap*, const char *, int, ns2__mapItem *const*, const char *);
SOAP_FMAC3 ns2__mapItem ** SOAP_FMAC4 soap_in_PointerTons2__mapItem(struct soap*, const char*, ns2__mapItem **, const char*);

#ifndef soap_write_PointerTons2__mapItem
#define soap_write_PointerTons2__mapItem(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons2__mapItem(soap, data), 0) || soap_put_PointerTons2__mapItem(soap, data, "ns2:mapItem", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__mapItem(struct soap*, ns2__mapItem *const*, const char*, const char*);

#ifndef soap_read_PointerTons2__mapItem
#define soap_read_PointerTons2__mapItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__mapItem(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns2__mapItem ** SOAP_FMAC4 soap_get_PointerTons2__mapItem(struct soap*, ns2__mapItem **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxsd__anyType
#define SOAP_TYPE_PointerToxsd__anyType (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyType(struct soap*, xsd__anyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyType(struct soap*, const char *, int, xsd__anyType *const*, const char *);
SOAP_FMAC3 xsd__anyType ** SOAP_FMAC4 soap_in_PointerToxsd__anyType(struct soap*, const char*, xsd__anyType **, const char*);

#ifndef soap_write_PointerToxsd__anyType
#define soap_write_PointerToxsd__anyType(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxsd__anyType(soap, data), 0) || soap_put_PointerToxsd__anyType(soap, data, "xsd:anyType", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyType(struct soap*, xsd__anyType *const*, const char*, const char*);

#ifndef soap_read_PointerToxsd__anyType
#define soap_read_PointerToxsd__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__anyType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xsd__anyType ** SOAP_FMAC4 soap_get_PointerToxsd__anyType(struct soap*, xsd__anyType **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons3__DataHolder
#define SOAP_TYPE_PointerTons3__DataHolder (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__DataHolder(struct soap*, ns3__DataHolder *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__DataHolder(struct soap*, const char *, int, ns3__DataHolder *const*, const char *);
SOAP_FMAC3 ns3__DataHolder ** SOAP_FMAC4 soap_in_PointerTons3__DataHolder(struct soap*, const char*, ns3__DataHolder **, const char*);

#ifndef soap_write_PointerTons3__DataHolder
#define soap_write_PointerTons3__DataHolder(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons3__DataHolder(soap, data), 0) || soap_put_PointerTons3__DataHolder(soap, data, "ns3:DataHolder", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__DataHolder(struct soap*, ns3__DataHolder *const*, const char*, const char*);

#ifndef soap_read_PointerTons3__DataHolder
#define soap_read_PointerTons3__DataHolder(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__DataHolder(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns3__DataHolder ** SOAP_FMAC4 soap_get_PointerTons3__DataHolder(struct soap*, ns3__DataHolder **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons2__Vector
#define SOAP_TYPE_PointerTons2__Vector (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__Vector(struct soap*, ns2__Vector *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__Vector(struct soap*, const char *, int, ns2__Vector *const*, const char *);
SOAP_FMAC3 ns2__Vector ** SOAP_FMAC4 soap_in_PointerTons2__Vector(struct soap*, const char*, ns2__Vector **, const char*);

#ifndef soap_write_PointerTons2__Vector
#define soap_write_PointerTons2__Vector(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons2__Vector(soap, data), 0) || soap_put_PointerTons2__Vector(soap, data, "ns2:Vector", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__Vector(struct soap*, ns2__Vector *const*, const char*, const char*);

#ifndef soap_read_PointerTons2__Vector
#define soap_read_PointerTons2__Vector(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__Vector(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns2__Vector ** SOAP_FMAC4 soap_get_PointerTons2__Vector(struct soap*, ns2__Vector **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons2__Map
#define SOAP_TYPE_PointerTons2__Map (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__Map(struct soap*, ns2__Map *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__Map(struct soap*, const char *, int, ns2__Map *const*, const char *);
SOAP_FMAC3 ns2__Map ** SOAP_FMAC4 soap_in_PointerTons2__Map(struct soap*, const char*, ns2__Map **, const char*);

#ifndef soap_write_PointerTons2__Map
#define soap_write_PointerTons2__Map(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons2__Map(soap, data), 0) || soap_put_PointerTons2__Map(soap, data, "ns2:Map", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__Map(struct soap*, ns2__Map *const*, const char*, const char*);

#ifndef soap_read_PointerTons2__Map
#define soap_read_PointerTons2__Map(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__Map(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns2__Map ** SOAP_FMAC4 soap_get_PointerTons2__Map(struct soap*, ns2__Map **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerToxsd__anyType
#define SOAP_TYPE_std__vectorTemplateOfPointerToxsd__anyType (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, std::vector<xsd__anyType * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, const std::vector<xsd__anyType * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, const char*, int, const std::vector<xsd__anyType * >*, const char*);
SOAP_FMAC3 std::vector<xsd__anyType * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, const char*, std::vector<xsd__anyType * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerToxsd__anyType(soap, n) soap_instantiate_std__vectorTemplateOfPointerToxsd__anyType(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerToxsd__anyType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xsd__anyType * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerToxsd__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__mapItem
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__mapItem (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__mapItem(struct soap*, std::vector<ns2__mapItem * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__mapItem(struct soap*, const std::vector<ns2__mapItem * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__mapItem(struct soap*, const char*, int, const std::vector<ns2__mapItem * >*, const char*);
SOAP_FMAC3 std::vector<ns2__mapItem * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__mapItem(struct soap*, const char*, std::vector<ns2__mapItem * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTons2__mapItem(soap, n) soap_instantiate_std__vectorTemplateOfPointerTons2__mapItem(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTons2__mapItem(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<ns2__mapItem * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__mapItem(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__mapItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons3__DataHolder
#define SOAP_TYPE_std__vectorTemplateOfPointerTons3__DataHolder (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__DataHolder(struct soap*, std::vector<ns3__DataHolder * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__DataHolder(struct soap*, const std::vector<ns3__DataHolder * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__DataHolder(struct soap*, const char*, int, const std::vector<ns3__DataHolder * >*, const char*);
SOAP_FMAC3 std::vector<ns3__DataHolder * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__DataHolder(struct soap*, const char*, std::vector<ns3__DataHolder * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTons3__DataHolder(soap, n) soap_instantiate_std__vectorTemplateOfPointerTons3__DataHolder(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTons3__DataHolder(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<ns3__DataHolder * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__DataHolder(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons3__DataHolder(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfint
#define SOAP_TYPE_std__vectorTemplateOfint (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfint(struct soap*, std::vector<int >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfint(struct soap*, const std::vector<int >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfint(struct soap*, const char*, int, const std::vector<int >*, const char*);
SOAP_FMAC3 std::vector<int >* SOAP_FMAC4 soap_in_std__vectorTemplateOfint(struct soap*, const char*, std::vector<int >*, const char*);

#define soap_new_std__vectorTemplateOfint(soap, n) soap_instantiate_std__vectorTemplateOfint(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfint(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<int > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfint(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
