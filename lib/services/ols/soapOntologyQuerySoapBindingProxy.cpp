/* soapOntologyQuerySoapBindingProxy.cpp
   Generated by gSOAP 2.8.4 from OLSWS.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapOntologyQuerySoapBindingProxy.h"

OntologyQuerySoapBindingProxy::OntologyQuerySoapBindingProxy()
{	OntologyQuerySoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

OntologyQuerySoapBindingProxy::OntologyQuerySoapBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

OntologyQuerySoapBindingProxy::OntologyQuerySoapBindingProxy(const char *url)
{	OntologyQuerySoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

OntologyQuerySoapBindingProxy::OntologyQuerySoapBindingProxy(soap_mode iomode)
{	OntologyQuerySoapBindingProxy_init(iomode, iomode);
}

OntologyQuerySoapBindingProxy::OntologyQuerySoapBindingProxy(const char *url, soap_mode iomode)
{	OntologyQuerySoapBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

OntologyQuerySoapBindingProxy::OntologyQuerySoapBindingProxy(soap_mode imode, soap_mode omode)
{	OntologyQuerySoapBindingProxy_init(imode, omode);
}

OntologyQuerySoapBindingProxy::~OntologyQuerySoapBindingProxy()
{ }

void OntologyQuerySoapBindingProxy::OntologyQuerySoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns2", "http://xml.apache.org/xml-soap", NULL, NULL},
	{"ns3", "http://model.web.ook.ebi.ac.uk", NULL, NULL},
	{"ns1", "http://www.ebi.ac.uk/ontology-lookup/OntologyQuery", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void OntologyQuerySoapBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void OntologyQuerySoapBindingProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *OntologyQuerySoapBindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *OntologyQuerySoapBindingProxy::soap_fault()
{	return this->fault;
}

const char *OntologyQuerySoapBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *OntologyQuerySoapBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int OntologyQuerySoapBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int OntologyQuerySoapBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void OntologyQuerySoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void OntologyQuerySoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *OntologyQuerySoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int OntologyQuerySoapBindingProxy::getVersion(const char *endpoint, const char *soap_action, _ns1__getVersion *ns1__getVersion, _ns1__getVersionResponse *ns1__getVersionResponse)
{	struct soap *soap = this;
	struct __ns1__getVersion soap_tmp___ns1__getVersion;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getVersion";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getVersion.ns1__getVersion = ns1__getVersion;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getVersion(soap, &soap_tmp___ns1__getVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getVersion(soap, &soap_tmp___ns1__getVersion, "-ns1:getVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getVersion(soap, &soap_tmp___ns1__getVersion, "-ns1:getVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getVersionResponse)
		return soap_closesock(soap);
	ns1__getVersionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getVersionResponse->soap_get(soap, "ns1:getVersionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getTermById(const char *endpoint, const char *soap_action, _ns1__getTermById *ns1__getTermById, _ns1__getTermByIdResponse *ns1__getTermByIdResponse)
{	struct soap *soap = this;
	struct __ns1__getTermById soap_tmp___ns1__getTermById;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getTermById";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTermById.ns1__getTermById = ns1__getTermById;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTermById(soap, &soap_tmp___ns1__getTermById);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTermById(soap, &soap_tmp___ns1__getTermById, "-ns1:getTermById", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTermById(soap, &soap_tmp___ns1__getTermById, "-ns1:getTermById", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getTermByIdResponse)
		return soap_closesock(soap);
	ns1__getTermByIdResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTermByIdResponse->soap_get(soap, "ns1:getTermByIdResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getTermMetadata(const char *endpoint, const char *soap_action, _ns1__getTermMetadata *ns1__getTermMetadata, _ns1__getTermMetadataResponse *ns1__getTermMetadataResponse)
{	struct soap *soap = this;
	struct __ns1__getTermMetadata soap_tmp___ns1__getTermMetadata;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getTermMetadata";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTermMetadata.ns1__getTermMetadata = ns1__getTermMetadata;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTermMetadata(soap, &soap_tmp___ns1__getTermMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTermMetadata(soap, &soap_tmp___ns1__getTermMetadata, "-ns1:getTermMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTermMetadata(soap, &soap_tmp___ns1__getTermMetadata, "-ns1:getTermMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getTermMetadataResponse)
		return soap_closesock(soap);
	ns1__getTermMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTermMetadataResponse->soap_get(soap, "ns1:getTermMetadataResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getTermXrefs(const char *endpoint, const char *soap_action, _ns1__getTermXrefs *ns1__getTermXrefs, _ns1__getTermXrefsResponse *ns1__getTermXrefsResponse)
{	struct soap *soap = this;
	struct __ns1__getTermXrefs soap_tmp___ns1__getTermXrefs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getTermXrefs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTermXrefs.ns1__getTermXrefs = ns1__getTermXrefs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTermXrefs(soap, &soap_tmp___ns1__getTermXrefs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTermXrefs(soap, &soap_tmp___ns1__getTermXrefs, "-ns1:getTermXrefs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTermXrefs(soap, &soap_tmp___ns1__getTermXrefs, "-ns1:getTermXrefs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getTermXrefsResponse)
		return soap_closesock(soap);
	ns1__getTermXrefsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTermXrefsResponse->soap_get(soap, "ns1:getTermXrefsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getOntologyNames(const char *endpoint, const char *soap_action, _ns1__getOntologyNames *ns1__getOntologyNames, _ns1__getOntologyNamesResponse *ns1__getOntologyNamesResponse)
{	struct soap *soap = this;
	struct __ns1__getOntologyNames soap_tmp___ns1__getOntologyNames;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getOntologyNames";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getOntologyNames.ns1__getOntologyNames = ns1__getOntologyNames;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getOntologyNames(soap, &soap_tmp___ns1__getOntologyNames);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getOntologyNames(soap, &soap_tmp___ns1__getOntologyNames, "-ns1:getOntologyNames", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getOntologyNames(soap, &soap_tmp___ns1__getOntologyNames, "-ns1:getOntologyNames", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getOntologyNamesResponse)
		return soap_closesock(soap);
	ns1__getOntologyNamesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getOntologyNamesResponse->soap_get(soap, "ns1:getOntologyNamesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getOntologyLoadDate(const char *endpoint, const char *soap_action, _ns1__getOntologyLoadDate *ns1__getOntologyLoadDate, _ns1__getOntologyLoadDateResponse *ns1__getOntologyLoadDateResponse)
{	struct soap *soap = this;
	struct __ns1__getOntologyLoadDate soap_tmp___ns1__getOntologyLoadDate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getOntologyLoadDate";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getOntologyLoadDate.ns1__getOntologyLoadDate = ns1__getOntologyLoadDate;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getOntologyLoadDate(soap, &soap_tmp___ns1__getOntologyLoadDate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getOntologyLoadDate(soap, &soap_tmp___ns1__getOntologyLoadDate, "-ns1:getOntologyLoadDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getOntologyLoadDate(soap, &soap_tmp___ns1__getOntologyLoadDate, "-ns1:getOntologyLoadDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getOntologyLoadDateResponse)
		return soap_closesock(soap);
	ns1__getOntologyLoadDateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getOntologyLoadDateResponse->soap_get(soap, "ns1:getOntologyLoadDateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getAllTermsFromOntology(const char *endpoint, const char *soap_action, _ns1__getAllTermsFromOntology *ns1__getAllTermsFromOntology, _ns1__getAllTermsFromOntologyResponse *ns1__getAllTermsFromOntologyResponse)
{	struct soap *soap = this;
	struct __ns1__getAllTermsFromOntology soap_tmp___ns1__getAllTermsFromOntology;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getAllTermsFromOntology";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAllTermsFromOntology.ns1__getAllTermsFromOntology = ns1__getAllTermsFromOntology;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAllTermsFromOntology(soap, &soap_tmp___ns1__getAllTermsFromOntology);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAllTermsFromOntology(soap, &soap_tmp___ns1__getAllTermsFromOntology, "-ns1:getAllTermsFromOntology", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAllTermsFromOntology(soap, &soap_tmp___ns1__getAllTermsFromOntology, "-ns1:getAllTermsFromOntology", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getAllTermsFromOntologyResponse)
		return soap_closesock(soap);
	ns1__getAllTermsFromOntologyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getAllTermsFromOntologyResponse->soap_get(soap, "ns1:getAllTermsFromOntologyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getRootTerms(const char *endpoint, const char *soap_action, _ns1__getRootTerms *ns1__getRootTerms, _ns1__getRootTermsResponse *ns1__getRootTermsResponse)
{	struct soap *soap = this;
	struct __ns1__getRootTerms soap_tmp___ns1__getRootTerms;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getRootTerms";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getRootTerms.ns1__getRootTerms = ns1__getRootTerms;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getRootTerms(soap, &soap_tmp___ns1__getRootTerms);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getRootTerms(soap, &soap_tmp___ns1__getRootTerms, "-ns1:getRootTerms", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getRootTerms(soap, &soap_tmp___ns1__getRootTerms, "-ns1:getRootTerms", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getRootTermsResponse)
		return soap_closesock(soap);
	ns1__getRootTermsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getRootTermsResponse->soap_get(soap, "ns1:getRootTermsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getTermsByName(const char *endpoint, const char *soap_action, _ns1__getTermsByName *ns1__getTermsByName, _ns1__getTermsByNameResponse *ns1__getTermsByNameResponse)
{	struct soap *soap = this;
	struct __ns1__getTermsByName soap_tmp___ns1__getTermsByName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getTermsByName";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTermsByName.ns1__getTermsByName = ns1__getTermsByName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTermsByName(soap, &soap_tmp___ns1__getTermsByName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTermsByName(soap, &soap_tmp___ns1__getTermsByName, "-ns1:getTermsByName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTermsByName(soap, &soap_tmp___ns1__getTermsByName, "-ns1:getTermsByName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getTermsByNameResponse)
		return soap_closesock(soap);
	ns1__getTermsByNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTermsByNameResponse->soap_get(soap, "ns1:getTermsByNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getTermsByExactName(const char *endpoint, const char *soap_action, _ns1__getTermsByExactName *ns1__getTermsByExactName, _ns1__getTermsByExactNameResponse *ns1__getTermsByExactNameResponse)
{	struct soap *soap = this;
	struct __ns1__getTermsByExactName soap_tmp___ns1__getTermsByExactName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getTermsByExactName";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTermsByExactName.ns1__getTermsByExactName = ns1__getTermsByExactName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTermsByExactName(soap, &soap_tmp___ns1__getTermsByExactName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTermsByExactName(soap, &soap_tmp___ns1__getTermsByExactName, "-ns1:getTermsByExactName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTermsByExactName(soap, &soap_tmp___ns1__getTermsByExactName, "-ns1:getTermsByExactName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getTermsByExactNameResponse)
		return soap_closesock(soap);
	ns1__getTermsByExactNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTermsByExactNameResponse->soap_get(soap, "ns1:getTermsByExactNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getPrefixedTermsByName(const char *endpoint, const char *soap_action, _ns1__getPrefixedTermsByName *ns1__getPrefixedTermsByName, _ns1__getPrefixedTermsByNameResponse *ns1__getPrefixedTermsByNameResponse)
{	struct soap *soap = this;
	struct __ns1__getPrefixedTermsByName soap_tmp___ns1__getPrefixedTermsByName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getPrefixedTermsByName";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPrefixedTermsByName.ns1__getPrefixedTermsByName = ns1__getPrefixedTermsByName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPrefixedTermsByName(soap, &soap_tmp___ns1__getPrefixedTermsByName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPrefixedTermsByName(soap, &soap_tmp___ns1__getPrefixedTermsByName, "-ns1:getPrefixedTermsByName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPrefixedTermsByName(soap, &soap_tmp___ns1__getPrefixedTermsByName, "-ns1:getPrefixedTermsByName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getPrefixedTermsByNameResponse)
		return soap_closesock(soap);
	ns1__getPrefixedTermsByNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getPrefixedTermsByNameResponse->soap_get(soap, "ns1:getPrefixedTermsByNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getTermParents(const char *endpoint, const char *soap_action, _ns1__getTermParents *ns1__getTermParents, _ns1__getTermParentsResponse *ns1__getTermParentsResponse)
{	struct soap *soap = this;
	struct __ns1__getTermParents soap_tmp___ns1__getTermParents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getTermParents";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTermParents.ns1__getTermParents = ns1__getTermParents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTermParents(soap, &soap_tmp___ns1__getTermParents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTermParents(soap, &soap_tmp___ns1__getTermParents, "-ns1:getTermParents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTermParents(soap, &soap_tmp___ns1__getTermParents, "-ns1:getTermParents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getTermParentsResponse)
		return soap_closesock(soap);
	ns1__getTermParentsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTermParentsResponse->soap_get(soap, "ns1:getTermParentsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getTermChildren(const char *endpoint, const char *soap_action, _ns1__getTermChildren *ns1__getTermChildren, _ns1__getTermChildrenResponse *ns1__getTermChildrenResponse)
{	struct soap *soap = this;
	struct __ns1__getTermChildren soap_tmp___ns1__getTermChildren;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getTermChildren";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTermChildren.ns1__getTermChildren = ns1__getTermChildren;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTermChildren(soap, &soap_tmp___ns1__getTermChildren);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTermChildren(soap, &soap_tmp___ns1__getTermChildren, "-ns1:getTermChildren", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTermChildren(soap, &soap_tmp___ns1__getTermChildren, "-ns1:getTermChildren", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getTermChildrenResponse)
		return soap_closesock(soap);
	ns1__getTermChildrenResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTermChildrenResponse->soap_get(soap, "ns1:getTermChildrenResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getTermRelations(const char *endpoint, const char *soap_action, _ns1__getTermRelations *ns1__getTermRelations, _ns1__getTermRelationsResponse *ns1__getTermRelationsResponse)
{	struct soap *soap = this;
	struct __ns1__getTermRelations soap_tmp___ns1__getTermRelations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getTermRelations";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTermRelations.ns1__getTermRelations = ns1__getTermRelations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTermRelations(soap, &soap_tmp___ns1__getTermRelations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTermRelations(soap, &soap_tmp___ns1__getTermRelations, "-ns1:getTermRelations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTermRelations(soap, &soap_tmp___ns1__getTermRelations, "-ns1:getTermRelations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getTermRelationsResponse)
		return soap_closesock(soap);
	ns1__getTermRelationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTermRelationsResponse->soap_get(soap, "ns1:getTermRelationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getChildrenFromRoot(const char *endpoint, const char *soap_action, _ns1__getChildrenFromRoot *ns1__getChildrenFromRoot, _ns1__getChildrenFromRootResponse *ns1__getChildrenFromRootResponse)
{	struct soap *soap = this;
	struct __ns1__getChildrenFromRoot soap_tmp___ns1__getChildrenFromRoot;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getChildrenFromRoot";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getChildrenFromRoot.ns1__getChildrenFromRoot = ns1__getChildrenFromRoot;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getChildrenFromRoot(soap, &soap_tmp___ns1__getChildrenFromRoot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getChildrenFromRoot(soap, &soap_tmp___ns1__getChildrenFromRoot, "-ns1:getChildrenFromRoot", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getChildrenFromRoot(soap, &soap_tmp___ns1__getChildrenFromRoot, "-ns1:getChildrenFromRoot", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getChildrenFromRootResponse)
		return soap_closesock(soap);
	ns1__getChildrenFromRootResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getChildrenFromRootResponse->soap_get(soap, "ns1:getChildrenFromRootResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::isObsolete(const char *endpoint, const char *soap_action, _ns1__isObsolete *ns1__isObsolete, _ns1__isObsoleteResponse *ns1__isObsoleteResponse)
{	struct soap *soap = this;
	struct __ns1__isObsolete soap_tmp___ns1__isObsolete;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "isObsolete";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__isObsolete.ns1__isObsolete = ns1__isObsolete;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__isObsolete(soap, &soap_tmp___ns1__isObsolete);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__isObsolete(soap, &soap_tmp___ns1__isObsolete, "-ns1:isObsolete", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__isObsolete(soap, &soap_tmp___ns1__isObsolete, "-ns1:isObsolete", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__isObsoleteResponse)
		return soap_closesock(soap);
	ns1__isObsoleteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__isObsoleteResponse->soap_get(soap, "ns1:isObsoleteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int OntologyQuerySoapBindingProxy::getTermsByAnnotationData(const char *endpoint, const char *soap_action, _ns1__getTermsByAnnotationData *ns1__getTermsByAnnotationData, _ns1__getTermsByAnnotationDataResponse *ns1__getTermsByAnnotationDataResponse)
{	struct soap *soap = this;
	struct __ns1__getTermsByAnnotationData soap_tmp___ns1__getTermsByAnnotationData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_endpoint)
		soap_endpoint = "http://www.ebi.ac.uk/ontology-lookup/services/OntologyQuery";
	if (!soap_action)
		soap_action = "getTermsByAnnotationData";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTermsByAnnotationData.ns1__getTermsByAnnotationData = ns1__getTermsByAnnotationData;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTermsByAnnotationData(soap, &soap_tmp___ns1__getTermsByAnnotationData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTermsByAnnotationData(soap, &soap_tmp___ns1__getTermsByAnnotationData, "-ns1:getTermsByAnnotationData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTermsByAnnotationData(soap, &soap_tmp___ns1__getTermsByAnnotationData, "-ns1:getTermsByAnnotationData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getTermsByAnnotationDataResponse)
		return soap_closesock(soap);
	ns1__getTermsByAnnotationDataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTermsByAnnotationDataResponse->soap_get(soap, "ns1:getTermsByAnnotationDataResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
